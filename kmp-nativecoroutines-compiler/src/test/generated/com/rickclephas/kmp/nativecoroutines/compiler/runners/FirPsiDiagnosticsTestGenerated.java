

package com.rickclephas.kmp.nativecoroutines.compiler.runners;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link com.rickclephas.kmp.nativecoroutines.compiler.GenerateTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("src/testData/diagnostics")
@TestDataPath("$PROJECT_ROOT")
public class FirPsiDiagnosticsTestGenerated extends AbstractFirPsiDiagnosticsTest {
    @Test
    public void testAllFilesPresentInDiagnostics() throws Exception {
        KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("src/testData/diagnostics"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("conflict.kt")
    public void testConflict() throws Exception {
        runTest("src/testData/diagnostics/conflict.kt");
    }

    @Test
    @TestMetadata("exposedAnnotated.kt")
    public void testExposedAnnotated() throws Exception {
        runTest("src/testData/diagnostics/exposedAnnotated.kt");
    }

    @Test
    @TestMetadata("exposedError.kt")
    public void testExposedError() throws Exception {
        runTest("src/testData/diagnostics/exposedError.kt");
    }

    @Test
    @TestMetadata("exposedNone.kt")
    public void testExposedNone() throws Exception {
        runTest("src/testData/diagnostics/exposedNone.kt");
    }

    @Test
    @TestMetadata("exposedWarning.kt")
    public void testExposedWarning() throws Exception {
        runTest("src/testData/diagnostics/exposedWarning.kt");
    }

    @Test
    @TestMetadata("ignored.kt")
    public void testIgnored() throws Exception {
        runTest("src/testData/diagnostics/ignored.kt");
    }

    @Test
    @TestMetadata("invalid.kt")
    public void testInvalid() throws Exception {
        runTest("src/testData/diagnostics/invalid.kt");
    }

    @Test
    @TestMetadata("redundant.kt")
    public void testRedundant() throws Exception {
        runTest("src/testData/diagnostics/redundant.kt");
    }

    @Test
    @TestMetadata("unsupported.kt")
    public void testUnsupported() throws Exception {
        runTest("src/testData/diagnostics/unsupported.kt");
    }
}
