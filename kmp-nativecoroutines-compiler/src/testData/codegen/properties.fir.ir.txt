FILE fqName:<root> fileName:/properties.kt
  PROPERTY name:topLevelFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:topLevelFlow type:kotlinx.coroutines.flow.Flow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
          <T>: kotlin.String
          value: CONST String type=kotlin.String value="OK1"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-topLevelFlow> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.Flow<kotlin.String>
      correspondingProperty: PROPERTY name:topLevelFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:topLevelFlow type:kotlinx.coroutines.flow.Flow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
  PROPERTY name:topLevelSharedFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:topLevelSharedFlow type:kotlinx.coroutines.flow.SharedFlow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun apply <T> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.apply, kotlin.Unit>): T of kotlin.apply declared in kotlin' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> origin=null
          <T>: kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>
          $receiver: CALL 'public final fun MutableSharedFlow <T> (replay: kotlin.Int, extraBufferCapacity: kotlin.Int, onBufferOverflow: kotlinx.coroutines.channels.BufferOverflow): kotlinx.coroutines.flow.MutableSharedFlow<T of kotlinx.coroutines.flow.MutableSharedFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> origin=null
            <T>: kotlin.String
            replay: CONST Int type=kotlin.Int value=1
          block: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>) returnType:kotlin.Unit
              $receiver: VALUE_PARAMETER name:$this$apply type:kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public abstract fun tryEmit (value: T of kotlinx.coroutines.flow.MutableSharedFlow): kotlin.Boolean declared in kotlinx.coroutines.flow.MutableSharedFlow' type=kotlin.Boolean origin=null
                    $this: GET_VAR '$this$apply: kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> declared in <root>.topLevelSharedFlow.<anonymous>' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> origin=null
                    value: CONST String type=kotlin.String value="OK2"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-topLevelSharedFlow> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.SharedFlow<kotlin.String>
      correspondingProperty: PROPERTY name:topLevelSharedFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:topLevelSharedFlow type:kotlinx.coroutines.flow.SharedFlow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=null
  PROPERTY name:topLevelStateFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:topLevelStateFlow type:kotlinx.coroutines.flow.StateFlow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
          <T>: kotlin.String
          value: CONST String type=kotlin.String value="OK3"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-topLevelStateFlow> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String>
      correspondingProperty: PROPERTY name:topLevelStateFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelStateFlow> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:topLevelStateFlow type:kotlinx.coroutines.flow.StateFlow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
  PROPERTY name:topLevelMutableStateFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:topLevelMutableStateFlow type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
          <T>: kotlin.String
          value: CONST String type=kotlin.String value="OK4"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-topLevelMutableStateFlow> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>
      correspondingProperty: PROPERTY name:topLevelMutableStateFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelMutableStateFlow> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:topLevelMutableStateFlow type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
  PROPERTY name:nullableFlowValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:nullableFlowValue type:kotlinx.coroutines.flow.Flow<kotlin.String?> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<kotlin.String?> origin=null
          <T>: kotlin.String?
          value: CONST Null type=kotlin.Nothing? value=null
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-nullableFlowValue> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.Flow<kotlin.String?>
      correspondingProperty: PROPERTY name:nullableFlowValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableFlowValue> (): kotlinx.coroutines.flow.Flow<kotlin.String?> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:nullableFlowValue type:kotlinx.coroutines.flow.Flow<kotlin.String?> visibility:private [final,static]' type=kotlinx.coroutines.flow.Flow<kotlin.String?> origin=null
  PROPERTY name:nullableSharedFlowValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:nullableSharedFlowValue type:kotlinx.coroutines.flow.SharedFlow<kotlin.String?> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun apply <T> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.apply, kotlin.Unit>): T of kotlin.apply declared in kotlin' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?> origin=null
          <T>: kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?>
          $receiver: CALL 'public final fun MutableSharedFlow <T> (replay: kotlin.Int, extraBufferCapacity: kotlin.Int, onBufferOverflow: kotlinx.coroutines.channels.BufferOverflow): kotlinx.coroutines.flow.MutableSharedFlow<T of kotlinx.coroutines.flow.MutableSharedFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?> origin=null
            <T>: kotlin.String?
            replay: CONST Int type=kotlin.Int value=1
          block: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?>, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?>) returnType:kotlin.Unit
              $receiver: VALUE_PARAMETER name:$this$apply type:kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?>
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public abstract fun tryEmit (value: T of kotlinx.coroutines.flow.MutableSharedFlow): kotlin.Boolean declared in kotlinx.coroutines.flow.MutableSharedFlow' type=kotlin.Boolean origin=null
                    $this: GET_VAR '$this$apply: kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?> declared in <root>.nullableSharedFlowValue.<anonymous>' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?> origin=null
                    value: CONST Null type=kotlin.Nothing? value=null
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-nullableSharedFlowValue> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.SharedFlow<kotlin.String?>
      correspondingProperty: PROPERTY name:nullableSharedFlowValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableSharedFlowValue> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String?> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:nullableSharedFlowValue type:kotlinx.coroutines.flow.SharedFlow<kotlin.String?> visibility:private [final,static]' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String?> origin=null
  PROPERTY name:nullableStateFlowValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:nullableStateFlowValue type:kotlinx.coroutines.flow.StateFlow<kotlin.String?> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String?> origin=null
          <T>: kotlin.String?
          value: CONST Null type=kotlin.Nothing? value=null
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-nullableStateFlowValue> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String?>
      correspondingProperty: PROPERTY name:nullableStateFlowValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableStateFlowValue> (): kotlinx.coroutines.flow.StateFlow<kotlin.String?> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:nullableStateFlowValue type:kotlinx.coroutines.flow.StateFlow<kotlin.String?> visibility:private [final,static]' type=kotlinx.coroutines.flow.StateFlow<kotlin.String?> origin=null
  PROPERTY name:stateProperty visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutinesState
    FIELD PROPERTY_BACKING_FIELD name:stateProperty type:kotlinx.coroutines.flow.StateFlow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
          <T>: kotlin.String
          value: CONST String type=kotlin.String value="OK23"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-stateProperty> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String>
      correspondingProperty: PROPERTY name:stateProperty visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-stateProperty> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:stateProperty type:kotlinx.coroutines.flow.StateFlow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
  PROPERTY name:mutableStateProperty visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutinesState
    FIELD PROPERTY_BACKING_FIELD name:mutableStateProperty type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
          <T>: kotlin.String
          value: CONST String type=kotlin.String value="OK24"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-mutableStateProperty> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>
      correspondingProperty: PROPERTY name:mutableStateProperty visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-mutableStateProperty> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:mutableStateProperty type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
  PROPERTY name:refinedFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutinesRefined
    FIELD PROPERTY_BACKING_FIELD name:refinedFlow type:kotlinx.coroutines.flow.Flow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
          <T>: kotlin.String
          value: CONST String type=kotlin.String value="OK25"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-refinedFlow> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.Flow<kotlin.String>
      correspondingProperty: PROPERTY name:refinedFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-refinedFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:refinedFlow type:kotlinx.coroutines.flow.Flow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
  PROPERTY name:refinedState visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutinesRefinedState
    FIELD PROPERTY_BACKING_FIELD name:refinedState type:kotlinx.coroutines.flow.StateFlow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
          <T>: kotlin.String
          value: CONST String type=kotlin.String value="OK26"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-refinedState> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String>
      correspondingProperty: PROPERTY name:refinedState visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-refinedState> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:refinedState type:kotlinx.coroutines.flow.StateFlow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
  PROPERTY name:mutableNullableStateProperty visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutinesState
    FIELD PROPERTY_BACKING_FIELD name:mutableNullableStateProperty type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
          <T>: kotlin.String
          value: CONST String type=kotlin.String value="OK27"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-mutableNullableStateProperty> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>?
      correspondingProperty: PROPERTY name:mutableNullableStateProperty visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-mutableNullableStateProperty> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:mutableNullableStateProperty type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? visibility:private [final,static]' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? origin=null
  CLASS CLASS name:MyClass28 modality:FINAL visibility:public superTypes:[<root>.MyInterface28]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MyClass28
    PROPERTY name:interfaceFlowValue visibility:public modality:OPEN [val]
      annotations:
        NativeCoroutines
      overridden:
        public abstract interfaceFlowValue: kotlinx.coroutines.flow.Flow<kotlin.String>
      FIELD PROPERTY_BACKING_FIELD name:interfaceFlowValue type:kotlinx.coroutines.flow.Flow<kotlin.String> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
            <T>: kotlin.String
            value: CONST String type=kotlin.String value="OK28"
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-interfaceFlowValue> visibility:public modality:OPEN <> ($this:<root>.MyClass28) returnType:kotlinx.coroutines.flow.Flow<kotlin.String>
        correspondingProperty: PROPERTY name:interfaceFlowValue visibility:public modality:OPEN [val]
        overridden:
          public abstract fun <get-interfaceFlowValue> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.MyInterface28
        $this: VALUE_PARAMETER name:<this> type:<root>.MyClass28
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public open fun <get-interfaceFlowValue> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.MyClass28'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:interfaceFlowValue type:kotlinx.coroutines.flow.Flow<kotlin.String> visibility:private [final]' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
              receiver: GET_VAR '<this>: <root>.MyClass28 declared in <root>.MyClass28.<get-interfaceFlowValue>' type=<root>.MyClass28 origin=null
    CONSTRUCTOR visibility:public <> () returnType:<root>.MyClass28 [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:MyClass28 modality:FINAL visibility:public superTypes:[<root>.MyInterface28]'
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyInterface28
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in <root>.MyInterface28
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in <root>.MyInterface28
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    PROPERTY FAKE_OVERRIDE name:interfaceFlowValueNative visibility:public modality:FINAL [fake_override,val]
      annotations:
        ObjCName(name = "interfaceFlowValue", swiftName = <null>, exact = <null>)
      overridden:
        public final interfaceFlowValueNative: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      FUN FAKE_OVERRIDE name:<get-interfaceFlowValueNative> visibility:public modality:FINAL <> ($this:<root>.MyInterface28) returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:interfaceFlowValueNative visibility:public modality:FINAL [fake_override,val]
        overridden:
          public final fun <get-interfaceFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyInterface28
        $this: VALUE_PARAMETER name:<this> type:<root>.MyInterface28
  CLASS CLASS name:MyFlow29 modality:FINAL visibility:public superTypes:[kotlinx.coroutines.flow.Flow<T2 of <root>.MyFlow29?>]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MyFlow29<T1 of <root>.MyFlow29, T2 of <root>.MyFlow29>
    TYPE_PARAMETER name:T1 index:0 variance: superTypes:[kotlin.Any?] reified:false
    TYPE_PARAMETER name:T2 index:1 variance: superTypes:[kotlin.Any?] reified:false
    FIELD DELEGATE name:$$delegate_0 type:kotlinx.coroutines.flow.Flow<T2 of <root>.MyFlow29?> visibility:private [final]
      EXPRESSION_BODY
        CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<T2 of <root>.MyFlow29?> origin=null
          <T>: T2 of <root>.MyFlow29?
          value: CONST Null type=kotlin.Nothing? value=null
    CONSTRUCTOR visibility:public <> (value1:T1 of <root>.MyFlow29, value2:T2 of <root>.MyFlow29) returnType:<root>.MyFlow29<T1 of <root>.MyFlow29, T2 of <root>.MyFlow29> [primary]
      VALUE_PARAMETER name:value1 index:0 type:T1 of <root>.MyFlow29
      VALUE_PARAMETER name:value2 index:1 type:T2 of <root>.MyFlow29
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:MyFlow29 modality:FINAL visibility:public superTypes:[kotlinx.coroutines.flow.Flow<T2 of <root>.MyFlow29?>]'
    FUN DELEGATED_MEMBER name:collect visibility:public modality:OPEN <> ($this:<root>.MyFlow29<T1 of <root>.MyFlow29, T2 of <root>.MyFlow29>, collector:kotlinx.coroutines.flow.FlowCollector<T2 of <root>.MyFlow29?>) returnType:kotlin.Unit [suspend]
      overridden:
        public abstract fun collect (collector: kotlinx.coroutines.flow.FlowCollector<T of kotlinx.coroutines.flow.Flow>): kotlin.Unit declared in kotlinx.coroutines.flow.Flow
      $this: VALUE_PARAMETER name:<this> type:<root>.MyFlow29<T1 of <root>.MyFlow29, T2 of <root>.MyFlow29>
      VALUE_PARAMETER name:collector index:0 type:kotlinx.coroutines.flow.FlowCollector<T2 of <root>.MyFlow29?>
      BLOCK_BODY
        CALL 'public abstract fun collect (collector: kotlinx.coroutines.flow.FlowCollector<T of kotlinx.coroutines.flow.Flow>): kotlin.Unit declared in kotlinx.coroutines.flow.Flow' type=kotlin.Unit origin=null
          $this: GET_FIELD 'FIELD DELEGATE name:$$delegate_0 type:kotlinx.coroutines.flow.Flow<T2 of <root>.MyFlow29?> visibility:private [final]' type=kotlinx.coroutines.flow.Flow<T2 of <root>.MyFlow29?> origin=null
            receiver: GET_VAR '<this>: <root>.MyFlow29<T1 of <root>.MyFlow29, T2 of <root>.MyFlow29> declared in <root>.MyFlow29.collect' type=<root>.MyFlow29<T1 of <root>.MyFlow29, T2 of <root>.MyFlow29> origin=null
          collector: GET_VAR 'collector: kotlinx.coroutines.flow.FlowCollector<T2 of <root>.MyFlow29?> declared in <root>.MyFlow29.collect' type=kotlinx.coroutines.flow.FlowCollector<T2 of <root>.MyFlow29?> origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlinx.coroutines.flow.Flow
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlinx.coroutines.flow.Flow
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlinx.coroutines.flow.Flow
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS CLASS name:MyGenericClass1 modality:FINAL visibility:public [data] superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    PROPERTY name:value visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'value: T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1.<init>' type=T of <root>.MyGenericClass1 origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-value> visibility:public modality:FINAL <> ($this:<root>.MyGenericClass1<T of <root>.MyGenericClass1>) returnType:T of <root>.MyGenericClass1
        correspondingProperty: PROPERTY name:value visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-value> (): T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
              receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.<get-value>' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
    CONSTRUCTOR visibility:public <> (value:T of <root>.MyGenericClass1) returnType:<root>.MyGenericClass1<T of <root>.MyGenericClass1> [primary]
      VALUE_PARAMETER name:value index:0 type:T of <root>.MyGenericClass1
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:MyGenericClass1 modality:FINAL visibility:public [data] superTypes:[kotlin.Any]'
    FUN GENERATED_DATA_CLASS_MEMBER name:component1 visibility:public modality:FINAL <> ($this:<root>.MyGenericClass1<T of <root>.MyGenericClass1>) returnType:T of <root>.MyGenericClass1 [operator]
      $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component1 (): T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
            receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.component1' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:copy visibility:public modality:FINAL <> ($this:<root>.MyGenericClass1<T of <root>.MyGenericClass1>, value:T of <root>.MyGenericClass1) returnType:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
      $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
      VALUE_PARAMETER name:value index:0 type:T of <root>.MyGenericClass1
        EXPRESSION_BODY
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
            receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.copy' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun copy (value: T of <root>.MyGenericClass1): <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1'
          CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass1) declared in <root>.MyGenericClass1' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
            <class: T>: T of <root>.MyGenericClass1
            value: GET_VAR 'value: T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1.copy' type=T of <root>.MyGenericClass1 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:equals visibility:public modality:OPEN <> ($this:<root>.MyGenericClass1<T of <root>.MyGenericClass1>, other:kotlin.Any?) returnType:kotlin.Boolean [operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQEQ
              arg0: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.equals' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
              arg1: GET_VAR 'other: kotlin.Any? declared in <root>.MyGenericClass1.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyGenericClass1'
              CONST Boolean type=kotlin.Boolean value=true
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=<root>.MyGenericClass1<T of <root>.MyGenericClass1>
              GET_VAR 'other: kotlin.Any? declared in <root>.MyGenericClass1.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyGenericClass1'
              CONST Boolean type=kotlin.Boolean value=false
        VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:<root>.MyGenericClass1<T of <root>.MyGenericClass1> [val]
          TYPE_OP type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=CAST typeOperand=<root>.MyGenericClass1<T of <root>.MyGenericClass1>
            GET_VAR 'other: kotlin.Any? declared in <root>.MyGenericClass1.equals' type=kotlin.Any? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
                  receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.equals' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
                arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
                  receiver: GET_VAR 'val tmp_0: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.equals' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyGenericClass1'
              CONST Boolean type=kotlin.Boolean value=false
        RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyGenericClass1'
          CONST Boolean type=kotlin.Boolean value=true
    FUN GENERATED_DATA_CLASS_MEMBER name:hashCode visibility:public modality:OPEN <> ($this:<root>.MyGenericClass1<T of <root>.MyGenericClass1>) returnType:kotlin.Int
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun hashCode (): kotlin.Int declared in <root>.MyGenericClass1'
          WHEN type=kotlin.Int origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
                  receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.hashCode' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Int type=kotlin.Int value=0
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public open fun hashCode (): kotlin.Int declared in kotlin.Any' type=kotlin.Int origin=null
                $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
                  receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.hashCode' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:toString visibility:public modality:OPEN <> ($this:<root>.MyGenericClass1<T of <root>.MyGenericClass1>) returnType:kotlin.String
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun toString (): kotlin.String declared in <root>.MyGenericClass1'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value="MyGenericClass1("
            CONST String type=kotlin.String value="value="
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
              receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.toString' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
            CONST String type=kotlin.String value=")"
  CLASS CLASS name:MyGenericClass2 modality:FINAL visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    PROPERTY name:value visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass2 visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'value: T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2.<init>' type=T of <root>.MyGenericClass2 origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-value> visibility:private modality:FINAL <> ($this:<root>.MyGenericClass2<T of <root>.MyGenericClass2>) returnType:T of <root>.MyGenericClass2
        correspondingProperty: PROPERTY name:value visibility:private modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-value> (): T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass2 visibility:private [final]' type=T of <root>.MyGenericClass2 origin=null
              receiver: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-value>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
    PROPERTY name:genericFlow visibility:public modality:FINAL [val]
      annotations:
        NativeCoroutines
      FIELD PROPERTY_BACKING_FIELD name:genericFlow type:kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> origin=null
            <T>: T of <root>.MyGenericClass2
            value: CALL 'private final fun <get-value> (): T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2' type=T of <root>.MyGenericClass2 origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-genericFlow> visibility:public modality:FINAL <> ($this:<root>.MyGenericClass2<T of <root>.MyGenericClass2>) returnType:kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2>
        correspondingProperty: PROPERTY name:genericFlow visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-genericFlow> (): kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:genericFlow type:kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> visibility:private [final]' type=kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> origin=null
              receiver: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericFlow>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
    PROPERTY name:genericSharedFlow visibility:public modality:FINAL [val]
      annotations:
        NativeCoroutines
      FIELD PROPERTY_BACKING_FIELD name:genericSharedFlow type:kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun apply <T> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.apply, kotlin.Unit>): T of kotlin.apply declared in kotlin' type=kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2> origin=null
            <T>: kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2>
            $receiver: CALL 'public final fun MutableSharedFlow <T> (replay: kotlin.Int, extraBufferCapacity: kotlin.Int, onBufferOverflow: kotlinx.coroutines.channels.BufferOverflow): kotlinx.coroutines.flow.MutableSharedFlow<T of kotlinx.coroutines.flow.MutableSharedFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2> origin=null
              <T>: T of <root>.MyGenericClass2
              replay: CONST Int type=kotlin.Int value=1
            block: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2>, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2>) returnType:kotlin.Unit
                $receiver: VALUE_PARAMETER name:$this$apply type:kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2>
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'public abstract fun tryEmit (value: T of kotlinx.coroutines.flow.MutableSharedFlow): kotlin.Boolean declared in kotlinx.coroutines.flow.MutableSharedFlow' type=kotlin.Boolean origin=null
                      $this: GET_VAR '$this$apply: kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.genericSharedFlow.<anonymous>' type=kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2> origin=null
                      value: CALL 'private final fun <get-value> (): T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2' type=T of <root>.MyGenericClass2 origin=GET_PROPERTY
                        $this: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-genericSharedFlow> visibility:public modality:FINAL <> ($this:<root>.MyGenericClass2<T of <root>.MyGenericClass2>) returnType:kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2>
        correspondingProperty: PROPERTY name:genericSharedFlow visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-genericSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:genericSharedFlow type:kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> visibility:private [final]' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> origin=null
              receiver: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericSharedFlow>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
    PROPERTY name:genericStateFlow visibility:public modality:FINAL [val]
      annotations:
        NativeCoroutines
      FIELD PROPERTY_BACKING_FIELD name:genericStateFlow type:kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<T of <root>.MyGenericClass2> origin=null
            <T>: T of <root>.MyGenericClass2
            value: CALL 'private final fun <get-value> (): T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2' type=T of <root>.MyGenericClass2 origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-genericStateFlow> visibility:public modality:FINAL <> ($this:<root>.MyGenericClass2<T of <root>.MyGenericClass2>) returnType:kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2>
        correspondingProperty: PROPERTY name:genericStateFlow visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-genericStateFlow> (): kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:genericStateFlow type:kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> visibility:private [final]' type=kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> origin=null
              receiver: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericStateFlow>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
    CONSTRUCTOR visibility:public <> (value:T of <root>.MyGenericClass2) returnType:<root>.MyGenericClass2<T of <root>.MyGenericClass2> [primary]
      VALUE_PARAMETER name:value index:0 type:T of <root>.MyGenericClass2
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:MyGenericClass2 modality:FINAL visibility:public superTypes:[kotlin.Any]'
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericFlowNative visibility:public modality:FINAL [val]
      annotations:
        ObjCName(name = "genericFlow", swiftName = <null>, exact = <null>)
      FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericFlowNative> visibility:public modality:FINAL <> ($this:<root>.MyGenericClass2<T of <root>.MyGenericClass2>) returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
        correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericFlowNative visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        BLOCK_BODY
          VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:kotlinx.coroutines.CoroutineScope? [val]
            CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_2 type:kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> [val]
            CALL 'public final fun <get-genericFlow> (): kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> origin=null
              $this: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericFlowNative>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
          RETURN type=kotlin.Nothing from='public final fun <get-genericFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyGenericClass2'
            CALL 'public final fun asNativeFlow <T> (scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
              <T>: T of <root>.MyGenericClass2
              $receiver: GET_VAR 'val tmp_2: kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericFlowNative>' type=kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> origin=null
              scope: GET_VAR 'val tmp_1: kotlinx.coroutines.CoroutineScope? declared in <root>.MyGenericClass2.<get-genericFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
    PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericSharedFlowNative visibility:public modality:FINAL [val]
      annotations:
        ObjCName(name = "genericSharedFlow", swiftName = <null>, exact = <null>)
      FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericSharedFlowNative> visibility:public modality:FINAL <> ($this:<root>.MyGenericClass2<T of <root>.MyGenericClass2>) returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
        correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericSharedFlowNative visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        BLOCK_BODY
          VAR IR_TEMPORARY_VARIABLE name:tmp_3 type:kotlinx.coroutines.CoroutineScope? [val]
            CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_4 type:kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> [val]
            CALL 'public final fun <get-genericSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> origin=null
              $this: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericSharedFlowNative>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
          RETURN type=kotlin.Nothing from='public final fun <get-genericSharedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyGenericClass2'
            CALL 'public final fun asNativeFlow <T> (scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
              <T>: T of <root>.MyGenericClass2
              $receiver: GET_VAR 'val tmp_4: kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericSharedFlowNative>' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> origin=null
              scope: GET_VAR 'val tmp_3: kotlinx.coroutines.CoroutineScope? declared in <root>.MyGenericClass2.<get-genericSharedFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
    PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericSharedFlowReplayCache visibility:public modality:FINAL [val]
      FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericSharedFlowReplayCache> visibility:public modality:FINAL <> ($this:<root>.MyGenericClass2<T of <root>.MyGenericClass2>) returnType:kotlin.collections.List<T of <root>.MyGenericClass2>
        correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericSharedFlowReplayCache visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        BLOCK_BODY
          VAR IR_TEMPORARY_VARIABLE name:tmp_5 type:kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> [val]
            CALL 'public final fun <get-genericSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> origin=null
              $this: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericSharedFlowReplayCache>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
          RETURN type=kotlin.Nothing from='public final fun <get-genericSharedFlowReplayCache> (): kotlin.collections.List<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2'
            CALL 'public abstract fun <get-replayCache> (): kotlin.collections.List<T of kotlinx.coroutines.flow.SharedFlow> declared in kotlinx.coroutines.flow.SharedFlow' type=T of <root>.MyGenericClass2 origin=null
              $this: GET_VAR 'val tmp_5: kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericSharedFlowReplayCache>' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> origin=null
    PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericStateFlowNative visibility:public modality:FINAL [val]
      annotations:
        ObjCName(name = "genericStateFlow", swiftName = <null>, exact = <null>)
      FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericStateFlowNative> visibility:public modality:FINAL <> ($this:<root>.MyGenericClass2<T of <root>.MyGenericClass2>) returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
        correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericStateFlowNative visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        BLOCK_BODY
          VAR IR_TEMPORARY_VARIABLE name:tmp_6 type:kotlinx.coroutines.CoroutineScope? [val]
            CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_7 type:kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> [val]
            CALL 'public final fun <get-genericStateFlow> (): kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> origin=null
              $this: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericStateFlowNative>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
          RETURN type=kotlin.Nothing from='public final fun <get-genericStateFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyGenericClass2'
            CALL 'public final fun asNativeFlow <T> (scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
              <T>: T of <root>.MyGenericClass2
              $receiver: GET_VAR 'val tmp_7: kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericStateFlowNative>' type=kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> origin=null
              scope: GET_VAR 'val tmp_6: kotlinx.coroutines.CoroutineScope? declared in <root>.MyGenericClass2.<get-genericStateFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
    PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericStateFlowValue visibility:public modality:FINAL [val]
      FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericStateFlowValue> visibility:public modality:FINAL <> ($this:<root>.MyGenericClass2<T of <root>.MyGenericClass2>) returnType:T of <root>.MyGenericClass2
        correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericStateFlowValue visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        BLOCK_BODY
          VAR IR_TEMPORARY_VARIABLE name:tmp_8 type:kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> [val]
            CALL 'public final fun <get-genericStateFlow> (): kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> origin=null
              $this: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericStateFlowValue>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
          RETURN type=kotlin.Nothing from='public final fun <get-genericStateFlowValue> (): T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2'
            CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=T of <root>.MyGenericClass2 origin=null
              $this: GET_VAR 'val tmp_8: kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericStateFlowValue>' type=kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> origin=null
  CLASS INTERFACE name:MyInterface28 modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MyInterface28
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:interfaceFlowValueNative visibility:public modality:FINAL [val]
      annotations:
        ObjCName(name = "interfaceFlowValue", swiftName = <null>, exact = <null>)
      FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-interfaceFlowValueNative> visibility:public modality:FINAL <> ($this:<root>.MyInterface28) returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
        correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:interfaceFlowValueNative visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyInterface28
        BLOCK_BODY
          VAR IR_TEMPORARY_VARIABLE name:tmp_9 type:kotlinx.coroutines.CoroutineScope? [val]
            CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_10 type:kotlinx.coroutines.flow.Flow<kotlin.String> [val]
            CALL 'public abstract fun <get-interfaceFlowValue> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.MyInterface28' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
              $this: GET_VAR '<this>: <root>.MyInterface28 declared in <root>.MyInterface28.<get-interfaceFlowValueNative>' type=<root>.MyInterface28 origin=null
          RETURN type=kotlin.Nothing from='public final fun <get-interfaceFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyInterface28'
            CALL 'public final fun asNativeFlow <T> (scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
              <T>: kotlin.String
              $receiver: GET_VAR 'val tmp_10: kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.MyInterface28.<get-interfaceFlowValueNative>' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
              scope: GET_VAR 'val tmp_9: kotlinx.coroutines.CoroutineScope? declared in <root>.MyInterface28.<get-interfaceFlowValueNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
    PROPERTY name:interfaceFlowValue visibility:public modality:ABSTRACT [val]
      annotations:
        NativeCoroutines
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-interfaceFlowValue> visibility:public modality:ABSTRACT <> ($this:<root>.MyInterface28) returnType:kotlinx.coroutines.flow.Flow<kotlin.String>
        correspondingProperty: PROPERTY name:interfaceFlowValue visibility:public modality:ABSTRACT [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyInterface28
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CALL 'public final fun runBoxTest (action: @[ExtensionFunctionType] kotlin.coroutines.SuspendFunction1<com.rickclephas.kmp.nativecoroutines.BoxTest, kotlin.Unit>): kotlin.String declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.String origin=null
          action: FUN_EXPR type=@[ExtensionFunctionType] kotlin.coroutines.SuspendFunction1<com.rickclephas.kmp.nativecoroutines.BoxTest, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:com.rickclephas.kmp.nativecoroutines.BoxTest) returnType:kotlin.Unit [suspend]
              $receiver: VALUE_PARAMETER name:$this$runBoxTest type:com.rickclephas.kmp.nativecoroutines.BoxTest
              BLOCK_BODY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-topLevelFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-topLevelSharedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun values <T> (values: kotlin.collections.List<T of com.rickclephas.kmp.nativecoroutines.BoxTest.values>): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  values: CALL 'public final fun <get-topLevelSharedFlowReplayCache> (): kotlin.collections.List<kotlin.String> declared in <root>' type=kotlin.collections.List<kotlin.String> origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-topLevelStateFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-topLevelStateFlowValue> (): kotlin.String declared in <root>' type=kotlin.String origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-topLevelMutableStateFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-topLevelMutableStateFlowValue> (): kotlin.String declared in <root>' type=kotlin.String origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-nullableFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-nullableSharedFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun values <T> (values: kotlin.collections.List<T of com.rickclephas.kmp.nativecoroutines.BoxTest.values>): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  values: CALL 'public final fun <get-nullableSharedFlowValueReplayCache> (): kotlin.collections.List<kotlin.String?> declared in <root>' type=kotlin.collections.List<kotlin.String?> origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-nullableStateFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-nullableStateFlowValueValue> (): kotlin.String? declared in <root>' type=kotlin.String? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-nullableFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-nullableSharedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.collections.List<kotlin.String>?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-nullableSharedFlowReplayCache> (): kotlin.collections.List<kotlin.String>? declared in <root>' type=kotlin.collections.List<kotlin.String>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-nullableStateFlowPropertyNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-nullableStateFlowPropertyValue> (): kotlin.String? declared in <root>' type=kotlin.String? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-nullableFlowAndValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-nullableSharedFlowAndValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.collections.List<kotlin.String?>?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-nullableSharedFlowAndValueReplayCache> (): kotlin.collections.List<kotlin.String?>? declared in <root>' type=kotlin.collections.List<kotlin.String?>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-nullableStateFlowAndValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-nullableStateFlowAndValueValue> (): kotlin.String? declared in <root>' type=kotlin.String? origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-genericFlowNative> <T> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericFlowNative>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    <T>: kotlin.String
                    $receiver: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass1) declared in <root>.MyGenericClass1' type=<root>.MyGenericClass1<kotlin.String> origin=null
                      <class: T>: kotlin.String
                      value: CONST String type=kotlin.String value="OK14"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-genericSharedFlowNative> <T> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericSharedFlowNative>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    <T>: kotlin.String
                    $receiver: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass1) declared in <root>.MyGenericClass1' type=<root>.MyGenericClass1<kotlin.String> origin=null
                      <class: T>: kotlin.String
                      value: CONST String type=kotlin.String value="OK15"
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun values <T> (values: kotlin.collections.List<T of com.rickclephas.kmp.nativecoroutines.BoxTest.values>): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  values: CALL 'public final fun <get-genericSharedFlowReplayCache> <T> (): kotlin.collections.List<T of <root>.<get-genericSharedFlowReplayCache>> declared in <root>' type=kotlin.collections.List<kotlin.String> origin=GET_PROPERTY
                    <T>: kotlin.String
                    $receiver: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass1) declared in <root>.MyGenericClass1' type=<root>.MyGenericClass1<kotlin.String> origin=null
                      <class: T>: kotlin.String
                      value: CONST String type=kotlin.String value="OK15"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-genericStateFlowNative> <T> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericStateFlowNative>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    <T>: kotlin.String
                    $receiver: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass1) declared in <root>.MyGenericClass1' type=<root>.MyGenericClass1<kotlin.String> origin=null
                      <class: T>: kotlin.String
                      value: CONST String type=kotlin.String value="OK16"
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-genericStateFlowValue> <T> (): T of <root>.<get-genericStateFlowValue> declared in <root>' type=kotlin.String origin=GET_PROPERTY
                    <T>: kotlin.String
                    $receiver: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass1) declared in <root>.MyGenericClass1' type=<root>.MyGenericClass1<kotlin.String> origin=null
                      <class: T>: kotlin.String
                      value: CONST String type=kotlin.String value="OK16"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-genericFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyGenericClass2' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    $this: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass2) declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<kotlin.String> origin=null
                      <class: T>: kotlin.String
                      value: CONST String type=kotlin.String value="OK17"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-genericSharedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyGenericClass2' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    $this: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass2) declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<kotlin.String> origin=null
                      <class: T>: kotlin.String
                      value: CONST String type=kotlin.String value="OK18"
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun values <T> (values: kotlin.collections.List<T of com.rickclephas.kmp.nativecoroutines.BoxTest.values>): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  values: CALL 'public final fun <get-genericSharedFlowReplayCache> (): kotlin.collections.List<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=kotlin.collections.List<kotlin.String> origin=GET_PROPERTY
                    $this: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass2) declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<kotlin.String> origin=null
                      <class: T>: kotlin.String
                      value: CONST String type=kotlin.String value="OK18"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-genericStateFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyGenericClass2' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    $this: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass2) declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<kotlin.String> origin=null
                      <class: T>: kotlin.String
                      value: CONST String type=kotlin.String value="OK19"
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-genericStateFlowValue> (): T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2' type=kotlin.String origin=GET_PROPERTY
                    $this: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass2) declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<kotlin.String> origin=null
                      <class: T>: kotlin.String
                      value: CONST String type=kotlin.String value="OK19"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-extensionFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    $receiver: CONST String type=kotlin.String value="OK20"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-extensionSharedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    $receiver: CONST String type=kotlin.String value="OK21"
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun values <T> (values: kotlin.collections.List<T of com.rickclephas.kmp.nativecoroutines.BoxTest.values>): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  values: CALL 'public final fun <get-extensionSharedFlowReplayCache> (): kotlin.collections.List<kotlin.String> declared in <root>' type=kotlin.collections.List<kotlin.String> origin=GET_PROPERTY
                    $receiver: CONST String type=kotlin.String value="OK21"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-extensionStateFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    $receiver: CONST String type=kotlin.String value="OK22"
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-extensionStateFlowValue> (): kotlin.String declared in <root>' type=kotlin.String origin=GET_PROPERTY
                    $receiver: CONST String type=kotlin.String value="OK22"
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-statePropertyValue> (): kotlin.String declared in <root>' type=kotlin.String origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-statePropertyFlow> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-mutableStatePropertyValue> (): kotlin.String declared in <root>' type=kotlin.String origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-mutableStatePropertyFlow> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-refinedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-refinedStateValue> (): kotlin.String declared in <root>' type=kotlin.String origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-refinedStateFlow> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  value: CALL 'public final fun <get-mutableNullableStatePropertyValue> (): kotlin.String? declared in <root>' type=kotlin.String? origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=EXCLEXCL
                    <T0>: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
                    arg0: CALL 'public final fun <get-mutableNullableStatePropertyFlow> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                  maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-interfaceFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyClass28' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    $this: CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.MyClass28' type=<root>.MyClass28 origin=null
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  <T>: kotlin.String?
                  $this: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=null
                  nativeFlow: CALL 'public final fun <get-customFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
  PROPERTY name:customFlowValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-customFlowValue> visibility:public modality:FINAL <> () returnType:<root>.MyFlow29<kotlin.Int, kotlin.String>
      correspondingProperty: PROPERTY name:customFlowValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-customFlowValue> (): <root>.MyFlow29<kotlin.Int, kotlin.String> declared in <root>'
          CONSTRUCTOR_CALL 'public constructor <init> (value1: T1 of <root>.MyFlow29, value2: T2 of <root>.MyFlow29) declared in <root>.MyFlow29' type=<root>.MyFlow29<kotlin.Int, kotlin.String> origin=null
            <class: T1>: kotlin.Int
            <class: T2>: kotlin.String
            value1: CONST Int type=kotlin.Int value=29
            value2: CONST String type=kotlin.String value="OK29"
  PROPERTY name:extensionFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-extensionFlow> visibility:public modality:FINAL <> ($receiver:kotlin.String) returnType:kotlinx.coroutines.flow.Flow<kotlin.String>
      correspondingProperty: PROPERTY name:extensionFlow visibility:public modality:FINAL [val]
      $receiver: VALUE_PARAMETER name:<this> type:kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-extensionFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>'
          CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
            <T>: kotlin.String
            value: GET_VAR '<this>: kotlin.String declared in <root>.<get-extensionFlow>' type=kotlin.String origin=null
  PROPERTY name:extensionSharedFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-extensionSharedFlow> visibility:public modality:FINAL <> ($receiver:kotlin.String) returnType:kotlinx.coroutines.flow.SharedFlow<kotlin.String>
      correspondingProperty: PROPERTY name:extensionSharedFlow visibility:public modality:FINAL [val]
      $receiver: VALUE_PARAMETER name:<this> type:kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-extensionSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>'
          CALL 'public final fun apply <T> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.apply, kotlin.Unit>): T of kotlin.apply declared in kotlin' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> origin=null
            <T>: kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>
            $receiver: CALL 'public final fun MutableSharedFlow <T> (replay: kotlin.Int, extraBufferCapacity: kotlin.Int, onBufferOverflow: kotlinx.coroutines.channels.BufferOverflow): kotlinx.coroutines.flow.MutableSharedFlow<T of kotlinx.coroutines.flow.MutableSharedFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> origin=null
              <T>: kotlin.String
              replay: CONST Int type=kotlin.Int value=1
            block: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>) returnType:kotlin.Unit
                $receiver: VALUE_PARAMETER name:$this$apply type:kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'public abstract fun tryEmit (value: T of kotlinx.coroutines.flow.MutableSharedFlow): kotlin.Boolean declared in kotlinx.coroutines.flow.MutableSharedFlow' type=kotlin.Boolean origin=null
                      $this: GET_VAR '$this$apply: kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> declared in <root>.<get-extensionSharedFlow>.<anonymous>' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> origin=null
                      value: GET_VAR '<this>: kotlin.String declared in <root>.<get-extensionSharedFlow>' type=kotlin.String origin=null
  PROPERTY name:extensionStateFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-extensionStateFlow> visibility:public modality:FINAL <> ($receiver:kotlin.String) returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String>
      correspondingProperty: PROPERTY name:extensionStateFlow visibility:public modality:FINAL [val]
      $receiver: VALUE_PARAMETER name:<this> type:kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-extensionStateFlow> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>'
          CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
            <T>: kotlin.String
            value: GET_VAR '<this>: kotlin.String declared in <root>.<get-extensionStateFlow>' type=kotlin.String origin=null
  PROPERTY name:genericFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-genericFlow> visibility:public modality:FINAL <T> ($receiver:<root>.MyGenericClass1<T of <root>.<get-genericFlow>>) returnType:kotlinx.coroutines.flow.Flow<T of <root>.<get-genericFlow>>
      correspondingProperty: PROPERTY name:genericFlow visibility:public modality:FINAL [val]
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
      $receiver: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass1<T of <root>.<get-genericFlow>>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-genericFlow> <T> (): kotlinx.coroutines.flow.Flow<T of <root>.<get-genericFlow>> declared in <root>'
          CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<T of <root>.<get-genericFlow>> origin=null
            <T>: T of <root>.<get-genericFlow>
            value: CALL 'public final fun <get-value> (): T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1' type=T of <root>.<get-genericFlow> origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.<get-genericFlow>> declared in <root>.<get-genericFlow>' type=<root>.MyGenericClass1<T of <root>.<get-genericFlow>> origin=null
  PROPERTY name:genericSharedFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-genericSharedFlow> visibility:public modality:FINAL <T> ($receiver:<root>.MyGenericClass1<T of <root>.<get-genericSharedFlow>>) returnType:kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>>
      correspondingProperty: PROPERTY name:genericSharedFlow visibility:public modality:FINAL [val]
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
      $receiver: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass1<T of <root>.<get-genericSharedFlow>>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-genericSharedFlow> <T> (): kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>> declared in <root>'
          CALL 'public final fun apply <T> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.apply, kotlin.Unit>): T of kotlin.apply declared in kotlin' type=kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>> origin=null
            <T>: kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>>
            $receiver: CALL 'public final fun MutableSharedFlow <T> (replay: kotlin.Int, extraBufferCapacity: kotlin.Int, onBufferOverflow: kotlinx.coroutines.channels.BufferOverflow): kotlinx.coroutines.flow.MutableSharedFlow<T of kotlinx.coroutines.flow.MutableSharedFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>> origin=null
              <T>: T of <root>.<get-genericSharedFlow>
              replay: CONST Int type=kotlin.Int value=1
            block: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>>, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>>) returnType:kotlin.Unit
                $receiver: VALUE_PARAMETER name:$this$apply type:kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>>
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'public abstract fun tryEmit (value: T of kotlinx.coroutines.flow.MutableSharedFlow): kotlin.Boolean declared in kotlinx.coroutines.flow.MutableSharedFlow' type=kotlin.Boolean origin=null
                      $this: GET_VAR '$this$apply: kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>> declared in <root>.<get-genericSharedFlow>.<anonymous>' type=kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>> origin=null
                      value: CALL 'public final fun <get-value> (): T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1' type=T of <root>.<get-genericSharedFlow> origin=GET_PROPERTY
                        $this: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.<get-genericSharedFlow>> declared in <root>.<get-genericSharedFlow>' type=<root>.MyGenericClass1<T of <root>.<get-genericSharedFlow>> origin=null
  PROPERTY name:genericStateFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-genericStateFlow> visibility:public modality:FINAL <T> ($receiver:<root>.MyGenericClass1<T of <root>.<get-genericStateFlow>>) returnType:kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>>
      correspondingProperty: PROPERTY name:genericStateFlow visibility:public modality:FINAL [val]
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
      $receiver: VALUE_PARAMETER name:<this> type:<root>.MyGenericClass1<T of <root>.<get-genericStateFlow>>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-genericStateFlow> <T> (): kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>> declared in <root>'
          CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<T of <root>.<get-genericStateFlow>> origin=null
            <T>: T of <root>.<get-genericStateFlow>
            value: CALL 'public final fun <get-value> (): T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1' type=T of <root>.<get-genericStateFlow> origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.<get-genericStateFlow>> declared in <root>.<get-genericStateFlow>' type=<root>.MyGenericClass1<T of <root>.<get-genericStateFlow>> origin=null
  PROPERTY name:nullableFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-nullableFlow> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.Flow<kotlin.String>?
      correspondingProperty: PROPERTY name:nullableFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String>? declared in <root>'
          CONST Null type=kotlin.Nothing? value=null
  PROPERTY name:nullableFlowAndValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-nullableFlowAndValue> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.Flow<kotlin.String?>?
      correspondingProperty: PROPERTY name:nullableFlowAndValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableFlowAndValue> (): kotlinx.coroutines.flow.Flow<kotlin.String?>? declared in <root>'
          CONST Null type=kotlin.Nothing? value=null
  PROPERTY name:nullableSharedFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-nullableSharedFlow> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.SharedFlow<kotlin.String>?
      correspondingProperty: PROPERTY name:nullableSharedFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String>? declared in <root>'
          CONST Null type=kotlin.Nothing? value=null
  PROPERTY name:nullableSharedFlowAndValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-nullableSharedFlowAndValue> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.SharedFlow<kotlin.String?>?
      correspondingProperty: PROPERTY name:nullableSharedFlowAndValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableSharedFlowAndValue> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? declared in <root>'
          CONST Null type=kotlin.Nothing? value=null
  PROPERTY name:nullableStateFlowAndValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-nullableStateFlowAndValue> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String?>?
      correspondingProperty: PROPERTY name:nullableStateFlowAndValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableStateFlowAndValue> (): kotlinx.coroutines.flow.StateFlow<kotlin.String?>? declared in <root>'
          CONST Null type=kotlin.Nothing? value=null
  PROPERTY name:nullableStateFlowProperty visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-nullableStateFlowProperty> visibility:public modality:FINAL <> () returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String>?
      correspondingProperty: PROPERTY name:nullableStateFlowProperty visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableStateFlowProperty> (): kotlinx.coroutines.flow.StateFlow<kotlin.String>? declared in <root>'
          CONST Null type=kotlin.Nothing? value=null
