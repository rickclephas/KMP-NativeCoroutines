FILE fqName:<root> fileName:/properties.kt
  PROPERTY name:topLevelFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:topLevelFlow type:kotlinx.coroutines.flow.Flow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
          TYPE_ARG T: kotlin.String
          ARG value: CONST String type=kotlin.String value="OK1"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-topLevelFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.Flow<kotlin.String>
      correspondingProperty: PROPERTY name:topLevelFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:topLevelFlow type:kotlinx.coroutines.flow.Flow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
  PROPERTY name:topLevelSharedFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:topLevelSharedFlow type:kotlinx.coroutines.flow.SharedFlow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun apply <T> (<this>: T of kotlin.apply, block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.apply, kotlin.Unit>): T of kotlin.apply declared in kotlin' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> origin=null
          TYPE_ARG T: kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>
          ARG <this>: CALL 'public final fun MutableSharedFlow <T> (replay: kotlin.Int, extraBufferCapacity: kotlin.Int, onBufferOverflow: kotlinx.coroutines.channels.BufferOverflow): kotlinx.coroutines.flow.MutableSharedFlow<T of kotlinx.coroutines.flow.MutableSharedFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> origin=null
            TYPE_ARG T: kotlin.String
            ARG replay: CONST Int type=kotlin.Int value=1
          ARG block: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:ExtensionReceiver name:$this$apply index:0 type:kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public abstract fun tryEmit (value: T of kotlinx.coroutines.flow.MutableSharedFlow): kotlin.Boolean declared in kotlinx.coroutines.flow.MutableSharedFlow' type=kotlin.Boolean origin=null
                    ARG <this>: GET_VAR '$this$apply: kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> declared in <root>.topLevelSharedFlow.<anonymous>' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> origin=IMPLICIT_ARGUMENT
                    ARG value: CONST String type=kotlin.String value="OK2"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-topLevelSharedFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.SharedFlow<kotlin.String>
      correspondingProperty: PROPERTY name:topLevelSharedFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:topLevelSharedFlow type:kotlinx.coroutines.flow.SharedFlow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=null
  PROPERTY name:topLevelStateFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:topLevelStateFlow type:kotlinx.coroutines.flow.StateFlow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
          TYPE_ARG T: kotlin.String
          ARG value: CONST String type=kotlin.String value="OK3"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-topLevelStateFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String>
      correspondingProperty: PROPERTY name:topLevelStateFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelStateFlow> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:topLevelStateFlow type:kotlinx.coroutines.flow.StateFlow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
  PROPERTY name:topLevelMutableStateFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:topLevelMutableStateFlow type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
          TYPE_ARG T: kotlin.String
          ARG value: CONST String type=kotlin.String value="OK4"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-topLevelMutableStateFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>
      correspondingProperty: PROPERTY name:topLevelMutableStateFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelMutableStateFlow> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:topLevelMutableStateFlow type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
  PROPERTY name:nullableFlowValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:nullableFlowValue type:kotlinx.coroutines.flow.Flow<kotlin.String?> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<kotlin.String?> origin=null
          TYPE_ARG T: kotlin.String?
          ARG value: CONST Null type=kotlin.Nothing? value=null
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-nullableFlowValue> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.Flow<kotlin.String?>
      correspondingProperty: PROPERTY name:nullableFlowValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableFlowValue> (): kotlinx.coroutines.flow.Flow<kotlin.String?> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:nullableFlowValue type:kotlinx.coroutines.flow.Flow<kotlin.String?> visibility:private [final,static]' type=kotlinx.coroutines.flow.Flow<kotlin.String?> origin=null
  PROPERTY name:nullableSharedFlowValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:nullableSharedFlowValue type:kotlinx.coroutines.flow.SharedFlow<kotlin.String?> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun apply <T> (<this>: T of kotlin.apply, block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.apply, kotlin.Unit>): T of kotlin.apply declared in kotlin' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?> origin=null
          TYPE_ARG T: kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?>
          ARG <this>: CALL 'public final fun MutableSharedFlow <T> (replay: kotlin.Int, extraBufferCapacity: kotlin.Int, onBufferOverflow: kotlinx.coroutines.channels.BufferOverflow): kotlinx.coroutines.flow.MutableSharedFlow<T of kotlinx.coroutines.flow.MutableSharedFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?> origin=null
            TYPE_ARG T: kotlin.String?
            ARG replay: CONST Int type=kotlin.Int value=1
          ARG block: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?>, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:ExtensionReceiver name:$this$apply index:0 type:kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?>
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public abstract fun tryEmit (value: T of kotlinx.coroutines.flow.MutableSharedFlow): kotlin.Boolean declared in kotlinx.coroutines.flow.MutableSharedFlow' type=kotlin.Boolean origin=null
                    ARG <this>: GET_VAR '$this$apply: kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?> declared in <root>.nullableSharedFlowValue.<anonymous>' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String?> origin=IMPLICIT_ARGUMENT
                    ARG value: CONST Null type=kotlin.Nothing? value=null
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-nullableSharedFlowValue> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.SharedFlow<kotlin.String?>
      correspondingProperty: PROPERTY name:nullableSharedFlowValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableSharedFlowValue> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String?> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:nullableSharedFlowValue type:kotlinx.coroutines.flow.SharedFlow<kotlin.String?> visibility:private [final,static]' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String?> origin=null
  PROPERTY name:nullableStateFlowValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FIELD PROPERTY_BACKING_FIELD name:nullableStateFlowValue type:kotlinx.coroutines.flow.StateFlow<kotlin.String?> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String?> origin=null
          TYPE_ARG T: kotlin.String?
          ARG value: CONST Null type=kotlin.Nothing? value=null
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-nullableStateFlowValue> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String?>
      correspondingProperty: PROPERTY name:nullableStateFlowValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableStateFlowValue> (): kotlinx.coroutines.flow.StateFlow<kotlin.String?> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:nullableStateFlowValue type:kotlinx.coroutines.flow.StateFlow<kotlin.String?> visibility:private [final,static]' type=kotlinx.coroutines.flow.StateFlow<kotlin.String?> origin=null
  PROPERTY name:stateProperty visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutinesState
    FIELD PROPERTY_BACKING_FIELD name:stateProperty type:kotlinx.coroutines.flow.StateFlow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
          TYPE_ARG T: kotlin.String
          ARG value: CONST String type=kotlin.String value="OK23"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-stateProperty> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String>
      correspondingProperty: PROPERTY name:stateProperty visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-stateProperty> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:stateProperty type:kotlinx.coroutines.flow.StateFlow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
  PROPERTY name:mutableStateProperty visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutinesState
    FIELD PROPERTY_BACKING_FIELD name:mutableStateProperty type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
          TYPE_ARG T: kotlin.String
          ARG value: CONST String type=kotlin.String value="OK24"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-mutableStateProperty> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>
      correspondingProperty: PROPERTY name:mutableStateProperty visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-mutableStateProperty> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:mutableStateProperty type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
  PROPERTY name:refinedFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutinesRefined
    FIELD PROPERTY_BACKING_FIELD name:refinedFlow type:kotlinx.coroutines.flow.Flow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
          TYPE_ARG T: kotlin.String
          ARG value: CONST String type=kotlin.String value="OK25"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-refinedFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.Flow<kotlin.String>
      correspondingProperty: PROPERTY name:refinedFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-refinedFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:refinedFlow type:kotlinx.coroutines.flow.Flow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
  PROPERTY name:refinedState visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutinesRefinedState
    FIELD PROPERTY_BACKING_FIELD name:refinedState type:kotlinx.coroutines.flow.StateFlow<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
          TYPE_ARG T: kotlin.String
          ARG value: CONST String type=kotlin.String value="OK26"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-refinedState> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String>
      correspondingProperty: PROPERTY name:refinedState visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-refinedState> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:refinedState type:kotlinx.coroutines.flow.StateFlow<kotlin.String> visibility:private [final,static]' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
  PROPERTY name:mutableNullableStateProperty visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutinesState
    FIELD PROPERTY_BACKING_FIELD name:mutableNullableStateProperty type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
          TYPE_ARG T: kotlin.String
          ARG value: CONST String type=kotlin.String value="OK27"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-mutableNullableStateProperty> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>?
      correspondingProperty: PROPERTY name:mutableNullableStateProperty visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-mutableNullableStateProperty> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:mutableNullableStateProperty type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? visibility:private [final,static]' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? origin=null
  CLASS CLASS name:MyClass28 modality:FINAL visibility:public superTypes:[<root>.MyInterface28]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.MyClass28
    PROPERTY name:interfaceFlowValue visibility:public modality:OPEN [val]
      annotations:
        NativeCoroutines
      overridden:
        public abstract interfaceFlowValue: kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.MyInterface28
      FIELD PROPERTY_BACKING_FIELD name:interfaceFlowValue type:kotlinx.coroutines.flow.Flow<kotlin.String> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
            TYPE_ARG T: kotlin.String
            ARG value: CONST String type=kotlin.String value="OK28"
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-interfaceFlowValue> visibility:public modality:OPEN returnType:kotlinx.coroutines.flow.Flow<kotlin.String>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyClass28
        correspondingProperty: PROPERTY name:interfaceFlowValue visibility:public modality:OPEN [val]
        overridden:
          public abstract fun <get-interfaceFlowValue> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.MyInterface28
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public open fun <get-interfaceFlowValue> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.MyClass28'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:interfaceFlowValue type:kotlinx.coroutines.flow.Flow<kotlin.String> visibility:private [final]' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
              receiver: GET_VAR '<this>: <root>.MyClass28 declared in <root>.MyClass28.<get-interfaceFlowValue>' type=<root>.MyClass28 origin=null
    CONSTRUCTOR visibility:public returnType:<root>.MyClass28 [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:MyClass28 modality:FINAL visibility:public superTypes:[<root>.MyInterface28]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyInterface28
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in <root>.MyInterface28
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in <root>.MyInterface28
    PROPERTY FAKE_OVERRIDE name:interfaceFlowValueNative visibility:public modality:OPEN [fake_override,val]
      annotations:
        ObjCName(name = "interfaceFlowValue", swiftName = <null>, exact = <null>)
      overridden:
        public open interfaceFlowValueNative: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyInterface28
      FUN FAKE_OVERRIDE name:<get-interfaceFlowValueNative> visibility:public modality:OPEN returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyInterface28
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:interfaceFlowValueNative visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-interfaceFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyInterface28
  CLASS CLASS name:MyFlow29 modality:FINAL visibility:public superTypes:[kotlinx.coroutines.flow.Flow<T2 of <root>.MyFlow29?>]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.MyFlow29<T1 of <root>.MyFlow29, T2 of <root>.MyFlow29>
    TYPE_PARAMETER name:T1 index:0 variance: superTypes:[kotlin.Any?] reified:false
    TYPE_PARAMETER name:T2 index:1 variance: superTypes:[kotlin.Any?] reified:false
    FIELD DELEGATE name:$$delegate_0 type:kotlinx.coroutines.flow.Flow<T2 of <root>.MyFlow29?> visibility:private [final]
      EXPRESSION_BODY
        CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<T2 of <root>.MyFlow29?> origin=null
          TYPE_ARG T: T2 of <root>.MyFlow29?
          ARG value: CONST Null type=kotlin.Nothing? value=null
    CONSTRUCTOR visibility:public returnType:<root>.MyFlow29<T1 of <root>.MyFlow29, T2 of <root>.MyFlow29> [primary]
      VALUE_PARAMETER kind:Regular name:value1 index:0 type:T1 of <root>.MyFlow29
      VALUE_PARAMETER kind:Regular name:value2 index:1 type:T2 of <root>.MyFlow29
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:MyFlow29 modality:FINAL visibility:public superTypes:[kotlinx.coroutines.flow.Flow<T2 of <root>.MyFlow29?>]' type=kotlin.Unit
    FUN DELEGATED_MEMBER name:collect visibility:public modality:OPEN returnType:kotlin.Unit [suspend]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyFlow29<T1 of <root>.MyFlow29, T2 of <root>.MyFlow29>
      VALUE_PARAMETER kind:Regular name:collector index:1 type:kotlinx.coroutines.flow.FlowCollector<T2 of <root>.MyFlow29?>
      overridden:
        public abstract fun collect (collector: kotlinx.coroutines.flow.FlowCollector<T of kotlinx.coroutines.flow.Flow>): kotlin.Unit declared in kotlinx.coroutines.flow.Flow
      BLOCK_BODY
        CALL 'public abstract fun collect (collector: kotlinx.coroutines.flow.FlowCollector<T of kotlinx.coroutines.flow.Flow>): kotlin.Unit declared in kotlinx.coroutines.flow.Flow' type=kotlin.Unit origin=null
          ARG <this>: GET_FIELD 'FIELD DELEGATE name:$$delegate_0 type:kotlinx.coroutines.flow.Flow<T2 of <root>.MyFlow29?> visibility:private [final] declared in <root>.MyFlow29' type=kotlinx.coroutines.flow.Flow<T2 of <root>.MyFlow29?> origin=null
            receiver: GET_VAR '<this>: <root>.MyFlow29<T1 of <root>.MyFlow29, T2 of <root>.MyFlow29> declared in <root>.MyFlow29.collect' type=<root>.MyFlow29<T1 of <root>.MyFlow29, T2 of <root>.MyFlow29> origin=null
          ARG collector: GET_VAR 'collector: kotlinx.coroutines.flow.FlowCollector<T2 of <root>.MyFlow29?> declared in <root>.MyFlow29.collect' type=kotlinx.coroutines.flow.FlowCollector<T2 of <root>.MyFlow29?> origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlinx.coroutines.flow.Flow
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlinx.coroutines.flow.Flow
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlinx.coroutines.flow.Flow
  CLASS CLASS name:MyGenericClass1 modality:FINAL visibility:public [data] superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    PROPERTY name:value visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'value: T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1.<init>' type=T of <root>.MyGenericClass1 origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-value> visibility:public modality:FINAL returnType:T of <root>.MyGenericClass1
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
        correspondingProperty: PROPERTY name:value visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-value> (): T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
              receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.<get-value>' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
    CONSTRUCTOR visibility:public returnType:<root>.MyGenericClass1<T of <root>.MyGenericClass1> [primary]
      VALUE_PARAMETER kind:Regular name:value index:0 type:T of <root>.MyGenericClass1
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:MyGenericClass1 modality:FINAL visibility:public [data] superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN GENERATED_DATA_CLASS_MEMBER name:component1 visibility:public modality:FINAL returnType:T of <root>.MyGenericClass1 [operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component1 (): T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
            receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.component1' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:copy visibility:public modality:FINAL returnType:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
      VALUE_PARAMETER kind:Regular name:value index:1 type:T of <root>.MyGenericClass1
        EXPRESSION_BODY
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
            receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.copy' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun copy (value: T of <root>.MyGenericClass1): <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1'
          CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass1) declared in <root>.MyGenericClass1' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
            TYPE_ARG (of class) T: T of <root>.MyGenericClass1
            ARG value: GET_VAR 'value: T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1.copy' type=T of <root>.MyGenericClass1 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQEQ
              ARG arg0: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.equals' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
              ARG arg1: GET_VAR 'other: kotlin.Any? declared in <root>.MyGenericClass1.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyGenericClass1'
              CONST Boolean type=kotlin.Boolean value=true
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=<root>.MyGenericClass1<T of <root>.MyGenericClass1>
              GET_VAR 'other: kotlin.Any? declared in <root>.MyGenericClass1.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyGenericClass1'
              CONST Boolean type=kotlin.Boolean value=false
        VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:<root>.MyGenericClass1<T of <root>.MyGenericClass1> [val]
          TYPE_OP type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=CAST typeOperand=<root>.MyGenericClass1<T of <root>.MyGenericClass1>
            GET_VAR 'other: kotlin.Any? declared in <root>.MyGenericClass1.equals' type=kotlin.Any? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
              ARG <this>: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                ARG arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
                  receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.equals' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
                ARG arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
                  receiver: GET_VAR 'val tmp_0: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.equals' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyGenericClass1'
              CONST Boolean type=kotlin.Boolean value=false
        RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyGenericClass1'
          CONST Boolean type=kotlin.Boolean value=true
    FUN GENERATED_DATA_CLASS_MEMBER name:hashCode visibility:public modality:OPEN returnType:kotlin.Int
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun hashCode (): kotlin.Int declared in <root>.MyGenericClass1'
          WHEN type=kotlin.Int origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                ARG arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
                  receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.hashCode' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
                ARG arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Int type=kotlin.Int value=0
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public open fun hashCode (): kotlin.Int declared in kotlin.Any' type=kotlin.Int origin=null
                ARG <this>: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
                  receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.hashCode' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:toString visibility:public modality:OPEN returnType:kotlin.String
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.MyGenericClass1>
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun toString (): kotlin.String declared in <root>.MyGenericClass1'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value="MyGenericClass1("
            CONST String type=kotlin.String value="value="
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass1 visibility:private [final]' type=T of <root>.MyGenericClass1 origin=null
              receiver: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.MyGenericClass1> declared in <root>.MyGenericClass1.toString' type=<root>.MyGenericClass1<T of <root>.MyGenericClass1> origin=null
            CONST String type=kotlin.String value=")"
  CLASS CLASS name:MyGenericClass2 modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    PROPERTY name:value visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass2 visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'value: T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2.<init>' type=T of <root>.MyGenericClass2 origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-value> visibility:private modality:FINAL returnType:T of <root>.MyGenericClass2
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        correspondingProperty: PROPERTY name:value visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-value> (): T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.MyGenericClass2 visibility:private [final]' type=T of <root>.MyGenericClass2 origin=null
              receiver: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-value>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
    PROPERTY name:genericFlow visibility:public modality:FINAL [val]
      annotations:
        NativeCoroutines
      FIELD PROPERTY_BACKING_FIELD name:genericFlow type:kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> origin=null
            TYPE_ARG T: T of <root>.MyGenericClass2
            ARG value: CALL 'private final fun <get-value> (): T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2' type=T of <root>.MyGenericClass2 origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=IMPLICIT_ARGUMENT
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-genericFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        correspondingProperty: PROPERTY name:genericFlow visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-genericFlow> (): kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:genericFlow type:kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> visibility:private [final]' type=kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> origin=null
              receiver: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericFlow>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
    PROPERTY name:genericSharedFlow visibility:public modality:FINAL [val]
      annotations:
        NativeCoroutines
      FIELD PROPERTY_BACKING_FIELD name:genericSharedFlow type:kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun apply <T> (<this>: T of kotlin.apply, block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.apply, kotlin.Unit>): T of kotlin.apply declared in kotlin' type=kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2> origin=null
            TYPE_ARG T: kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2>
            ARG <this>: CALL 'public final fun MutableSharedFlow <T> (replay: kotlin.Int, extraBufferCapacity: kotlin.Int, onBufferOverflow: kotlinx.coroutines.channels.BufferOverflow): kotlinx.coroutines.flow.MutableSharedFlow<T of kotlinx.coroutines.flow.MutableSharedFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2> origin=null
              TYPE_ARG T: T of <root>.MyGenericClass2
              ARG replay: CONST Int type=kotlin.Int value=1
            ARG block: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2>, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:ExtensionReceiver name:$this$apply index:0 type:kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2>
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'public abstract fun tryEmit (value: T of kotlinx.coroutines.flow.MutableSharedFlow): kotlin.Boolean declared in kotlinx.coroutines.flow.MutableSharedFlow' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR '$this$apply: kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.genericSharedFlow.<anonymous>' type=kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.MyGenericClass2> origin=IMPLICIT_ARGUMENT
                      ARG value: CALL 'private final fun <get-value> (): T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2' type=T of <root>.MyGenericClass2 origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=IMPLICIT_ARGUMENT
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-genericSharedFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        correspondingProperty: PROPERTY name:genericSharedFlow visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-genericSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:genericSharedFlow type:kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> visibility:private [final]' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> origin=null
              receiver: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericSharedFlow>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
    PROPERTY name:genericStateFlow visibility:public modality:FINAL [val]
      annotations:
        NativeCoroutines
      FIELD PROPERTY_BACKING_FIELD name:genericStateFlow type:kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<T of <root>.MyGenericClass2> origin=null
            TYPE_ARG T: T of <root>.MyGenericClass2
            ARG value: CALL 'private final fun <get-value> (): T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2' type=T of <root>.MyGenericClass2 origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=IMPLICIT_ARGUMENT
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-genericStateFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        correspondingProperty: PROPERTY name:genericStateFlow visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-genericStateFlow> (): kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:genericStateFlow type:kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> visibility:private [final]' type=kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> origin=null
              receiver: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericStateFlow>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
    CONSTRUCTOR visibility:public returnType:<root>.MyGenericClass2<T of <root>.MyGenericClass2> [primary]
      VALUE_PARAMETER kind:Regular name:value index:0 type:T of <root>.MyGenericClass2
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:MyGenericClass2 modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericFlowNative visibility:public modality:FINAL [val]
      annotations:
        ObjCName(name = "genericFlow", swiftName = <null>, exact = <null>)
      FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericFlowNative visibility:public modality:FINAL [val]
        BLOCK_BODY
          VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:kotlinx.coroutines.CoroutineScope? [val]
            CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_2 type:kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> [val]
            CALL 'public final fun <get-genericFlow> (): kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> origin=null
              ARG <this>: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericFlowNative>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
          RETURN type=kotlin.Nothing from='public final fun <get-genericFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyGenericClass2'
            CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
              TYPE_ARG T: T of <root>.MyGenericClass2
              ARG <this>: GET_VAR 'val tmp_2: kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericFlowNative>' type=kotlinx.coroutines.flow.Flow<T of <root>.MyGenericClass2> origin=null
              ARG scope: GET_VAR 'val tmp_1: kotlinx.coroutines.CoroutineScope? declared in <root>.MyGenericClass2.<get-genericFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
    PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericSharedFlowNative visibility:public modality:FINAL [val]
      annotations:
        ObjCName(name = "genericSharedFlow", swiftName = <null>, exact = <null>)
      FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericSharedFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericSharedFlowNative visibility:public modality:FINAL [val]
        BLOCK_BODY
          VAR IR_TEMPORARY_VARIABLE name:tmp_3 type:kotlinx.coroutines.CoroutineScope? [val]
            CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_4 type:kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> [val]
            CALL 'public final fun <get-genericSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> origin=null
              ARG <this>: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericSharedFlowNative>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
          RETURN type=kotlin.Nothing from='public final fun <get-genericSharedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyGenericClass2'
            CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
              TYPE_ARG T: T of <root>.MyGenericClass2
              ARG <this>: GET_VAR 'val tmp_4: kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericSharedFlowNative>' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> origin=null
              ARG scope: GET_VAR 'val tmp_3: kotlinx.coroutines.CoroutineScope? declared in <root>.MyGenericClass2.<get-genericSharedFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
    PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericSharedFlowReplayCache visibility:public modality:FINAL [val]
      FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericSharedFlowReplayCache> visibility:public modality:FINAL returnType:kotlin.collections.List<T of <root>.MyGenericClass2>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericSharedFlowReplayCache visibility:public modality:FINAL [val]
        BLOCK_BODY
          VAR IR_TEMPORARY_VARIABLE name:tmp_5 type:kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> [val]
            CALL 'public final fun <get-genericSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> origin=null
              ARG <this>: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericSharedFlowReplayCache>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
          RETURN type=kotlin.Nothing from='public final fun <get-genericSharedFlowReplayCache> (): kotlin.collections.List<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2'
            CALL 'public abstract fun <get-replayCache> (): kotlin.collections.List<T of kotlinx.coroutines.flow.SharedFlow> declared in kotlinx.coroutines.flow.SharedFlow' type=T of <root>.MyGenericClass2 origin=null
              ARG <this>: GET_VAR 'val tmp_5: kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericSharedFlowReplayCache>' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.MyGenericClass2> origin=null
    PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericStateFlowNative visibility:public modality:FINAL [val]
      annotations:
        ObjCName(name = "genericStateFlow", swiftName = <null>, exact = <null>)
      FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericStateFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericStateFlowNative visibility:public modality:FINAL [val]
        BLOCK_BODY
          VAR IR_TEMPORARY_VARIABLE name:tmp_6 type:kotlinx.coroutines.CoroutineScope? [val]
            CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_7 type:kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> [val]
            CALL 'public final fun <get-genericStateFlow> (): kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> origin=null
              ARG <this>: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericStateFlowNative>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
          RETURN type=kotlin.Nothing from='public final fun <get-genericStateFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyGenericClass2'
            CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
              TYPE_ARG T: T of <root>.MyGenericClass2
              ARG <this>: GET_VAR 'val tmp_7: kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericStateFlowNative>' type=kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> origin=null
              ARG scope: GET_VAR 'val tmp_6: kotlinx.coroutines.CoroutineScope? declared in <root>.MyGenericClass2.<get-genericStateFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
    PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericStateFlowValue visibility:public modality:FINAL [val]
      FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericStateFlowValue> visibility:public modality:FINAL returnType:T of <root>.MyGenericClass2
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyGenericClass2<T of <root>.MyGenericClass2>
        correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericStateFlowValue visibility:public modality:FINAL [val]
        BLOCK_BODY
          VAR IR_TEMPORARY_VARIABLE name:tmp_8 type:kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> [val]
            CALL 'public final fun <get-genericStateFlow> (): kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> origin=null
              ARG <this>: GET_VAR '<this>: <root>.MyGenericClass2<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericStateFlowValue>' type=<root>.MyGenericClass2<T of <root>.MyGenericClass2> origin=null
          RETURN type=kotlin.Nothing from='public final fun <get-genericStateFlowValue> (): T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2'
            CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=T of <root>.MyGenericClass2 origin=null
              ARG <this>: GET_VAR 'val tmp_8: kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2.<get-genericStateFlowValue>' type=kotlinx.coroutines.flow.StateFlow<T of <root>.MyGenericClass2> origin=null
  CLASS INTERFACE name:MyInterface28 modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.MyInterface28
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:interfaceFlowValueNative visibility:public modality:OPEN [val]
      annotations:
        ObjCName(name = "interfaceFlowValue", swiftName = <null>, exact = <null>)
      FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-interfaceFlowValueNative> visibility:public modality:OPEN returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyInterface28
        correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:interfaceFlowValueNative visibility:public modality:OPEN [val]
        BLOCK_BODY
          VAR IR_TEMPORARY_VARIABLE name:tmp_9 type:kotlinx.coroutines.CoroutineScope? [val]
            CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_10 type:kotlinx.coroutines.flow.Flow<kotlin.String> [val]
            CALL 'public abstract fun <get-interfaceFlowValue> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.MyInterface28' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
              ARG <this>: GET_VAR '<this>: <root>.MyInterface28 declared in <root>.MyInterface28.<get-interfaceFlowValueNative>' type=<root>.MyInterface28 origin=null
          RETURN type=kotlin.Nothing from='public open fun <get-interfaceFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyInterface28'
            CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
              TYPE_ARG T: kotlin.String
              ARG <this>: GET_VAR 'val tmp_10: kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.MyInterface28.<get-interfaceFlowValueNative>' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
              ARG scope: GET_VAR 'val tmp_9: kotlinx.coroutines.CoroutineScope? declared in <root>.MyInterface28.<get-interfaceFlowValueNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
    PROPERTY name:interfaceFlowValue visibility:public modality:ABSTRACT [val]
      annotations:
        NativeCoroutines
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-interfaceFlowValue> visibility:public modality:ABSTRACT returnType:kotlinx.coroutines.flow.Flow<kotlin.String>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyInterface28
        correspondingProperty: PROPERTY name:interfaceFlowValue visibility:public modality:ABSTRACT [val]
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CALL 'public final fun runBoxTest (action: @[ExtensionFunctionType] kotlin.coroutines.SuspendFunction1<com.rickclephas.kmp.nativecoroutines.BoxTest, kotlin.Unit>): kotlin.String declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.String origin=null
          ARG action: FUN_EXPR type=@[ExtensionFunctionType] kotlin.coroutines.SuspendFunction1<com.rickclephas.kmp.nativecoroutines.BoxTest, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit [suspend]
              VALUE_PARAMETER kind:ExtensionReceiver name:$this$runBoxTest index:0 type:com.rickclephas.kmp.nativecoroutines.BoxTest
              BLOCK_BODY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-topLevelFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-topLevelSharedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun values <T> (values: kotlin.collections.List<T of com.rickclephas.kmp.nativecoroutines.BoxTest.values>): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG values: CALL 'public final fun <get-topLevelSharedFlowReplayCache> (): kotlin.collections.List<kotlin.String> declared in <root>' type=kotlin.collections.List<kotlin.String> origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-topLevelStateFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-topLevelStateFlowValue> (): kotlin.String declared in <root>' type=kotlin.String origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-topLevelMutableStateFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-topLevelMutableStateFlowValue> (): kotlin.String declared in <root>' type=kotlin.String origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-nullableFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-nullableSharedFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun values <T> (values: kotlin.collections.List<T of com.rickclephas.kmp.nativecoroutines.BoxTest.values>): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG values: CALL 'public final fun <get-nullableSharedFlowValueReplayCache> (): kotlin.collections.List<kotlin.String?> declared in <root>' type=kotlin.collections.List<kotlin.String?> origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-nullableStateFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-nullableStateFlowValueValue> (): kotlin.String? declared in <root>' type=kotlin.String? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-nullableFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-nullableSharedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.collections.List<kotlin.String>?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-nullableSharedFlowReplayCache> (): kotlin.collections.List<kotlin.String>? declared in <root>' type=kotlin.collections.List<kotlin.String>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-nullableStateFlowPropertyNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-nullableStateFlowPropertyValue> (): kotlin.String? declared in <root>' type=kotlin.String? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-nullableFlowAndValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-nullableSharedFlowAndValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.collections.List<kotlin.String?>?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-nullableSharedFlowAndValueReplayCache> (): kotlin.collections.List<kotlin.String?>? declared in <root>' type=kotlin.collections.List<kotlin.String?>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-nullableStateFlowAndValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-nullableStateFlowAndValueValue> (): kotlin.String? declared in <root>' type=kotlin.String? origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-genericFlowNative> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericFlowNative>>): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericFlowNative>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    TYPE_ARG T: kotlin.String
                    ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass1) declared in <root>.MyGenericClass1' type=<root>.MyGenericClass1<kotlin.String> origin=null
                      TYPE_ARG (of class) T: kotlin.String
                      ARG value: CONST String type=kotlin.String value="OK14"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-genericSharedFlowNative> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericSharedFlowNative>>): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericSharedFlowNative>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    TYPE_ARG T: kotlin.String
                    ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass1) declared in <root>.MyGenericClass1' type=<root>.MyGenericClass1<kotlin.String> origin=null
                      TYPE_ARG (of class) T: kotlin.String
                      ARG value: CONST String type=kotlin.String value="OK15"
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun values <T> (values: kotlin.collections.List<T of com.rickclephas.kmp.nativecoroutines.BoxTest.values>): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG values: CALL 'public final fun <get-genericSharedFlowReplayCache> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericSharedFlowReplayCache>>): kotlin.collections.List<T of <root>.<get-genericSharedFlowReplayCache>> declared in <root>' type=kotlin.collections.List<kotlin.String> origin=GET_PROPERTY
                    TYPE_ARG T: kotlin.String
                    ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass1) declared in <root>.MyGenericClass1' type=<root>.MyGenericClass1<kotlin.String> origin=null
                      TYPE_ARG (of class) T: kotlin.String
                      ARG value: CONST String type=kotlin.String value="OK15"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-genericStateFlowNative> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericStateFlowNative>>): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericStateFlowNative>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    TYPE_ARG T: kotlin.String
                    ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass1) declared in <root>.MyGenericClass1' type=<root>.MyGenericClass1<kotlin.String> origin=null
                      TYPE_ARG (of class) T: kotlin.String
                      ARG value: CONST String type=kotlin.String value="OK16"
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-genericStateFlowValue> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericStateFlowValue>>): T of <root>.<get-genericStateFlowValue> declared in <root>' type=kotlin.String origin=GET_PROPERTY
                    TYPE_ARG T: kotlin.String
                    ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass1) declared in <root>.MyGenericClass1' type=<root>.MyGenericClass1<kotlin.String> origin=null
                      TYPE_ARG (of class) T: kotlin.String
                      ARG value: CONST String type=kotlin.String value="OK16"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-genericFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyGenericClass2' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass2) declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<kotlin.String> origin=null
                      TYPE_ARG (of class) T: kotlin.String
                      ARG value: CONST String type=kotlin.String value="OK17"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-genericSharedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyGenericClass2' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass2) declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<kotlin.String> origin=null
                      TYPE_ARG (of class) T: kotlin.String
                      ARG value: CONST String type=kotlin.String value="OK18"
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun values <T> (values: kotlin.collections.List<T of com.rickclephas.kmp.nativecoroutines.BoxTest.values>): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG values: CALL 'public final fun <get-genericSharedFlowReplayCache> (): kotlin.collections.List<T of <root>.MyGenericClass2> declared in <root>.MyGenericClass2' type=kotlin.collections.List<kotlin.String> origin=GET_PROPERTY
                    ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass2) declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<kotlin.String> origin=null
                      TYPE_ARG (of class) T: kotlin.String
                      ARG value: CONST String type=kotlin.String value="OK18"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-genericStateFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.MyGenericClass2, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyGenericClass2' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass2) declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<kotlin.String> origin=null
                      TYPE_ARG (of class) T: kotlin.String
                      ARG value: CONST String type=kotlin.String value="OK19"
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-genericStateFlowValue> (): T of <root>.MyGenericClass2 declared in <root>.MyGenericClass2' type=kotlin.String origin=GET_PROPERTY
                    ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.MyGenericClass2) declared in <root>.MyGenericClass2' type=<root>.MyGenericClass2<kotlin.String> origin=null
                      TYPE_ARG (of class) T: kotlin.String
                      ARG value: CONST String type=kotlin.String value="OK19"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-extensionFlowNative> (<this>: kotlin.String): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    ARG <this>: CONST String type=kotlin.String value="OK20"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-extensionSharedFlowNative> (<this>: kotlin.String): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    ARG <this>: CONST String type=kotlin.String value="OK21"
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun values <T> (values: kotlin.collections.List<T of com.rickclephas.kmp.nativecoroutines.BoxTest.values>): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG values: CALL 'public final fun <get-extensionSharedFlowReplayCache> (<this>: kotlin.String): kotlin.collections.List<kotlin.String> declared in <root>' type=kotlin.collections.List<kotlin.String> origin=GET_PROPERTY
                    ARG <this>: CONST String type=kotlin.String value="OK21"
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-extensionStateFlowNative> (<this>: kotlin.String): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    ARG <this>: CONST String type=kotlin.String value="OK22"
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-extensionStateFlowValue> (<this>: kotlin.String): kotlin.String declared in <root>' type=kotlin.String origin=GET_PROPERTY
                    ARG <this>: CONST String type=kotlin.String value="OK22"
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-statePropertyValue> (): kotlin.String declared in <root>' type=kotlin.String origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-statePropertyFlow> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-mutableStatePropertyValue> (): kotlin.String declared in <root>' type=kotlin.String origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-mutableStatePropertyFlow> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-refinedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-refinedStateValue> (): kotlin.String declared in <root>' type=kotlin.String origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-refinedStateFlow> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun value <T> (value: T of com.rickclephas.kmp.nativecoroutines.BoxTest.value): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun <get-mutableNullableStatePropertyValue> (): kotlin.String? declared in <root>' type=kotlin.String? origin=GET_PROPERTY
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=EXCLEXCL
                    TYPE_ARG T0: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
                    ARG arg0: CALL 'public final fun <get-mutableNullableStatePropertyFlow> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=GET_PROPERTY
                  ARG maxValues: CONST Int type=kotlin.Int value=1
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public open fun <get-interfaceFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>.MyClass28' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
                    ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.MyClass28' type=<root>.MyClass28 origin=null
                CALL 'public final fun collect <T> (nativeFlow: kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.BoxTest.collect, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>, maxValues: kotlin.Int?): kotlin.Unit declared in com.rickclephas.kmp.nativecoroutines.BoxTest' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.String?
                  ARG <this>: GET_VAR '$this$runBoxTest: com.rickclephas.kmp.nativecoroutines.BoxTest declared in <root>.box.<anonymous>' type=com.rickclephas.kmp.nativecoroutines.BoxTest origin=IMPLICIT_ARGUMENT
                  ARG nativeFlow: CALL 'public final fun <get-customFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=GET_PROPERTY
  PROPERTY name:customFlowValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-customFlowValue> visibility:public modality:FINAL returnType:<root>.MyFlow29<kotlin.Int, kotlin.String>
      correspondingProperty: PROPERTY name:customFlowValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-customFlowValue> (): <root>.MyFlow29<kotlin.Int, kotlin.String> declared in <root>'
          CONSTRUCTOR_CALL 'public constructor <init> (value1: T1 of <root>.MyFlow29, value2: T2 of <root>.MyFlow29) declared in <root>.MyFlow29' type=<root>.MyFlow29<kotlin.Int, kotlin.String> origin=null
            TYPE_ARG (of class) T1: kotlin.Int
            TYPE_ARG (of class) T2: kotlin.String
            ARG value1: CONST Int type=kotlin.Int value=29
            ARG value2: CONST String type=kotlin.String value="OK29"
  PROPERTY name:extensionFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-extensionFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.Flow<kotlin.String>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlin.String
      correspondingProperty: PROPERTY name:extensionFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-extensionFlow> (<this>: kotlin.String): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>'
          CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
            TYPE_ARG T: kotlin.String
            ARG value: GET_VAR '<this>: kotlin.String declared in <root>.<get-extensionFlow>' type=kotlin.String origin=null
  PROPERTY name:extensionSharedFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-extensionSharedFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.SharedFlow<kotlin.String>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlin.String
      correspondingProperty: PROPERTY name:extensionSharedFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-extensionSharedFlow> (<this>: kotlin.String): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>'
          CALL 'public final fun apply <T> (<this>: T of kotlin.apply, block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.apply, kotlin.Unit>): T of kotlin.apply declared in kotlin' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> origin=null
            TYPE_ARG T: kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>
            ARG <this>: CALL 'public final fun MutableSharedFlow <T> (replay: kotlin.Int, extraBufferCapacity: kotlin.Int, onBufferOverflow: kotlinx.coroutines.channels.BufferOverflow): kotlinx.coroutines.flow.MutableSharedFlow<T of kotlinx.coroutines.flow.MutableSharedFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> origin=null
              TYPE_ARG T: kotlin.String
              ARG replay: CONST Int type=kotlin.Int value=1
            ARG block: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:ExtensionReceiver name:$this$apply index:0 type:kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String>
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'public abstract fun tryEmit (value: T of kotlinx.coroutines.flow.MutableSharedFlow): kotlin.Boolean declared in kotlinx.coroutines.flow.MutableSharedFlow' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR '$this$apply: kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> declared in <root>.<get-extensionSharedFlow>.<anonymous>' type=kotlinx.coroutines.flow.MutableSharedFlow<kotlin.String> origin=IMPLICIT_ARGUMENT
                      ARG value: GET_VAR '<this>: kotlin.String declared in <root>.<get-extensionSharedFlow>' type=kotlin.String origin=null
  PROPERTY name:extensionStateFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-extensionStateFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlin.String
      correspondingProperty: PROPERTY name:extensionStateFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-extensionStateFlow> (<this>: kotlin.String): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>'
          CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
            TYPE_ARG T: kotlin.String
            ARG value: GET_VAR '<this>: kotlin.String declared in <root>.<get-extensionStateFlow>' type=kotlin.String origin=null
  PROPERTY name:genericFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-genericFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.Flow<T of <root>.<get-genericFlow>>
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.<get-genericFlow>>
      correspondingProperty: PROPERTY name:genericFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-genericFlow> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericFlow>>): kotlinx.coroutines.flow.Flow<T of <root>.<get-genericFlow>> declared in <root>'
          CALL 'public final fun flowOf <T> (value: T of kotlinx.coroutines.flow.flowOf): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.flowOf> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<T of <root>.<get-genericFlow>> origin=null
            TYPE_ARG T: T of <root>.<get-genericFlow>
            ARG value: CALL 'public final fun <get-value> (): T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1' type=T of <root>.<get-genericFlow> origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.<get-genericFlow>> declared in <root>.<get-genericFlow>' type=<root>.MyGenericClass1<T of <root>.<get-genericFlow>> origin=IMPLICIT_ARGUMENT
  PROPERTY name:genericSharedFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-genericSharedFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>>
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.<get-genericSharedFlow>>
      correspondingProperty: PROPERTY name:genericSharedFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-genericSharedFlow> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericSharedFlow>>): kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>> declared in <root>'
          CALL 'public final fun apply <T> (<this>: T of kotlin.apply, block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.apply, kotlin.Unit>): T of kotlin.apply declared in kotlin' type=kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>> origin=null
            TYPE_ARG T: kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>>
            ARG <this>: CALL 'public final fun MutableSharedFlow <T> (replay: kotlin.Int, extraBufferCapacity: kotlin.Int, onBufferOverflow: kotlinx.coroutines.channels.BufferOverflow): kotlinx.coroutines.flow.MutableSharedFlow<T of kotlinx.coroutines.flow.MutableSharedFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>> origin=null
              TYPE_ARG T: T of <root>.<get-genericSharedFlow>
              ARG replay: CONST Int type=kotlin.Int value=1
            ARG block: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>>, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:ExtensionReceiver name:$this$apply index:0 type:kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>>
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'public abstract fun tryEmit (value: T of kotlinx.coroutines.flow.MutableSharedFlow): kotlin.Boolean declared in kotlinx.coroutines.flow.MutableSharedFlow' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR '$this$apply: kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>> declared in <root>.<get-genericSharedFlow>.<anonymous>' type=kotlinx.coroutines.flow.MutableSharedFlow<T of <root>.<get-genericSharedFlow>> origin=IMPLICIT_ARGUMENT
                      ARG value: CALL 'public final fun <get-value> (): T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1' type=T of <root>.<get-genericSharedFlow> origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.<get-genericSharedFlow>> declared in <root>.<get-genericSharedFlow>' type=<root>.MyGenericClass1<T of <root>.<get-genericSharedFlow>> origin=IMPLICIT_ARGUMENT
  PROPERTY name:genericStateFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-genericStateFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>>
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.<get-genericStateFlow>>
      correspondingProperty: PROPERTY name:genericStateFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-genericStateFlow> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericStateFlow>>): kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>> declared in <root>'
          CALL 'public final fun MutableStateFlow <T> (value: T of kotlinx.coroutines.flow.MutableStateFlow): kotlinx.coroutines.flow.MutableStateFlow<T of kotlinx.coroutines.flow.MutableStateFlow> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.MutableStateFlow<T of <root>.<get-genericStateFlow>> origin=null
            TYPE_ARG T: T of <root>.<get-genericStateFlow>
            ARG value: CALL 'public final fun <get-value> (): T of <root>.MyGenericClass1 declared in <root>.MyGenericClass1' type=T of <root>.<get-genericStateFlow> origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.<get-genericStateFlow>> declared in <root>.<get-genericStateFlow>' type=<root>.MyGenericClass1<T of <root>.<get-genericStateFlow>> origin=IMPLICIT_ARGUMENT
  PROPERTY name:nullableFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-nullableFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.Flow<kotlin.String>?
      correspondingProperty: PROPERTY name:nullableFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String>? declared in <root>'
          CONST Null type=kotlin.Nothing? value=null
  PROPERTY name:nullableFlowAndValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-nullableFlowAndValue> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.Flow<kotlin.String?>?
      correspondingProperty: PROPERTY name:nullableFlowAndValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableFlowAndValue> (): kotlinx.coroutines.flow.Flow<kotlin.String?>? declared in <root>'
          CONST Null type=kotlin.Nothing? value=null
  PROPERTY name:nullableSharedFlow visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-nullableSharedFlow> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.SharedFlow<kotlin.String>?
      correspondingProperty: PROPERTY name:nullableSharedFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String>? declared in <root>'
          CONST Null type=kotlin.Nothing? value=null
  PROPERTY name:nullableSharedFlowAndValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-nullableSharedFlowAndValue> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.SharedFlow<kotlin.String?>?
      correspondingProperty: PROPERTY name:nullableSharedFlowAndValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableSharedFlowAndValue> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? declared in <root>'
          CONST Null type=kotlin.Nothing? value=null
  PROPERTY name:nullableStateFlowAndValue visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-nullableStateFlowAndValue> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String?>?
      correspondingProperty: PROPERTY name:nullableStateFlowAndValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableStateFlowAndValue> (): kotlinx.coroutines.flow.StateFlow<kotlin.String?>? declared in <root>'
          CONST Null type=kotlin.Nothing? value=null
  PROPERTY name:nullableStateFlowProperty visibility:public modality:FINAL [val]
    annotations:
      NativeCoroutines
    FUN name:<get-nullableStateFlowProperty> visibility:public modality:FINAL returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String>?
      correspondingProperty: PROPERTY name:nullableStateFlowProperty visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-nullableStateFlowProperty> (): kotlinx.coroutines.flow.StateFlow<kotlin.String>? declared in <root>'
          CONST Null type=kotlin.Nothing? value=null
FILE fqName:<root> fileName:__GENERATED DECLARATIONS__.kt
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelMutableStateFlowValue visibility:public modality:FINAL [var]
    FIELD PROPERTY_BACKING_FIELD name:topLevelMutableStateFlowValue type:kotlin.String visibility:private [static]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-topLevelMutableStateFlowValue> visibility:public modality:FINAL returnType:kotlin.String
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelMutableStateFlowValue visibility:public modality:FINAL [var]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> [val]
          CALL 'public final fun <get-topLevelMutableStateFlow> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelMutableStateFlowValue> (): kotlin.String declared in <root>'
          CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=kotlin.String origin=null
            ARG <this>: GET_VAR 'val tmp_0: kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>.<get-topLevelMutableStateFlowValue>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<set-topLevelMutableStateFlowValue> visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] kind:Regular name:value index:0 type:kotlin.String
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelMutableStateFlowValue visibility:public modality:FINAL [var]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <set-topLevelMutableStateFlowValue> (value: kotlin.String): kotlin.Unit declared in <root>'
          CALL 'public abstract fun <set-value> (<set-?>: T of kotlinx.coroutines.flow.MutableStateFlow): kotlin.Unit declared in kotlinx.coroutines.flow.MutableStateFlow' type=kotlin.Unit origin=null
            ARG <this>: CALL 'public final fun <get-topLevelMutableStateFlow> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
            ARG <set-?>: GET_VAR 'value: kotlin.String declared in <root>.<set-topLevelMutableStateFlowValue>' type=kotlin.String origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:mutableStatePropertyValue visibility:public modality:FINAL [var]
    annotations:
      ObjCName(name = "mutableStateProperty", swiftName = <null>, exact = <null>)
    FIELD PROPERTY_BACKING_FIELD name:mutableStatePropertyValue type:kotlin.String visibility:private [static]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-mutableStatePropertyValue> visibility:public modality:FINAL returnType:kotlin.String
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:mutableStatePropertyValue visibility:public modality:FINAL [var]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> [val]
          CALL 'public final fun <get-mutableStateProperty> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-mutableStatePropertyValue> (): kotlin.String declared in <root>'
          CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=kotlin.String origin=null
            ARG <this>: GET_VAR 'val tmp_1: kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>.<get-mutableStatePropertyValue>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<set-mutableStatePropertyValue> visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] kind:Regular name:value index:0 type:kotlin.String
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:mutableStatePropertyValue visibility:public modality:FINAL [var]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <set-mutableStatePropertyValue> (value: kotlin.String): kotlin.Unit declared in <root>'
          CALL 'public abstract fun <set-value> (<set-?>: T of kotlinx.coroutines.flow.MutableStateFlow): kotlin.Unit declared in kotlinx.coroutines.flow.MutableStateFlow' type=kotlin.Unit origin=null
            ARG <this>: CALL 'public final fun <get-mutableStateProperty> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
            ARG <set-?>: GET_VAR 'value: kotlin.String declared in <root>.<set-mutableStatePropertyValue>' type=kotlin.String origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:customFlowValueNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "customFlowValue", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-customFlowValueNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:customFlowValueNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_2 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_3 type:<root>.MyFlow29<kotlin.Int, kotlin.String> [val]
          CALL 'public final fun <get-customFlowValue> (): <root>.MyFlow29<kotlin.Int, kotlin.String> declared in <root>' type=<root>.MyFlow29<kotlin.Int, kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-customFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String?
            ARG <this>: GET_VAR 'val tmp_3: <root>.MyFlow29<kotlin.Int, kotlin.String> declared in <root>.<get-customFlowValueNative>' type=<root>.MyFlow29<kotlin.Int, kotlin.String> origin=null
            ARG scope: GET_VAR 'val tmp_2: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-customFlowValueNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:extensionFlowNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "extensionFlow", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-extensionFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlin.String
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:extensionFlowNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_4 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_5 type:kotlinx.coroutines.flow.Flow<kotlin.String> [val]
          CALL 'public final fun <get-extensionFlow> (<this>: kotlin.String): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
            ARG <this>: GET_VAR '<this>: kotlin.String declared in <root>.<get-extensionFlowNative>' type=kotlin.String origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-extensionFlowNative> (<this>: kotlin.String): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String
            ARG <this>: GET_VAR 'val tmp_5: kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.<get-extensionFlowNative>' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
            ARG scope: GET_VAR 'val tmp_4: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-extensionFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:extensionSharedFlowNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "extensionSharedFlow", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-extensionSharedFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlin.String
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:extensionSharedFlowNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_6 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_7 type:kotlinx.coroutines.flow.SharedFlow<kotlin.String> [val]
          CALL 'public final fun <get-extensionSharedFlow> (<this>: kotlin.String): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=null
            ARG <this>: GET_VAR '<this>: kotlin.String declared in <root>.<get-extensionSharedFlowNative>' type=kotlin.String origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-extensionSharedFlowNative> (<this>: kotlin.String): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String
            ARG <this>: GET_VAR 'val tmp_7: kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>.<get-extensionSharedFlowNative>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=null
            ARG scope: GET_VAR 'val tmp_6: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-extensionSharedFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:extensionSharedFlowReplayCache visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-extensionSharedFlowReplayCache> visibility:public modality:FINAL returnType:kotlin.collections.List<kotlin.String>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlin.String
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:extensionSharedFlowReplayCache visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_8 type:kotlinx.coroutines.flow.SharedFlow<kotlin.String> [val]
          CALL 'public final fun <get-extensionSharedFlow> (<this>: kotlin.String): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=null
            ARG <this>: GET_VAR '<this>: kotlin.String declared in <root>.<get-extensionSharedFlowReplayCache>' type=kotlin.String origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-extensionSharedFlowReplayCache> (<this>: kotlin.String): kotlin.collections.List<kotlin.String> declared in <root>'
          CALL 'public abstract fun <get-replayCache> (): kotlin.collections.List<T of kotlinx.coroutines.flow.SharedFlow> declared in kotlinx.coroutines.flow.SharedFlow' type=kotlin.String origin=null
            ARG <this>: GET_VAR 'val tmp_8: kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>.<get-extensionSharedFlowReplayCache>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:extensionStateFlowNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "extensionStateFlow", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-extensionStateFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlin.String
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:extensionStateFlowNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_9 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_10 type:kotlinx.coroutines.flow.StateFlow<kotlin.String> [val]
          CALL 'public final fun <get-extensionStateFlow> (<this>: kotlin.String): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
            ARG <this>: GET_VAR '<this>: kotlin.String declared in <root>.<get-extensionStateFlowNative>' type=kotlin.String origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-extensionStateFlowNative> (<this>: kotlin.String): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String
            ARG <this>: GET_VAR 'val tmp_10: kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.<get-extensionStateFlowNative>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
            ARG scope: GET_VAR 'val tmp_9: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-extensionStateFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:extensionStateFlowValue visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-extensionStateFlowValue> visibility:public modality:FINAL returnType:kotlin.String
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlin.String
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:extensionStateFlowValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_11 type:kotlinx.coroutines.flow.StateFlow<kotlin.String> [val]
          CALL 'public final fun <get-extensionStateFlow> (<this>: kotlin.String): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
            ARG <this>: GET_VAR '<this>: kotlin.String declared in <root>.<get-extensionStateFlowValue>' type=kotlin.String origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-extensionStateFlowValue> (<this>: kotlin.String): kotlin.String declared in <root>'
          CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=kotlin.String origin=null
            ARG <this>: GET_VAR 'val tmp_11: kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.<get-extensionStateFlowValue>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericFlowNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "genericFlow", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericFlowNative>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      TYPE_PARAMETER GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.<get-genericFlowNative>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericFlowNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_12 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_13 type:kotlinx.coroutines.flow.Flow<T of <root>.<get-genericFlow>> [val]
          CALL 'public final fun <get-genericFlow> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericFlow>>): kotlinx.coroutines.flow.Flow<T of <root>.<get-genericFlow>> declared in <root>' type=kotlinx.coroutines.flow.Flow<T of <root>.<get-genericFlow>> origin=null
            TYPE_ARG T: T of <root>.<get-genericFlowNative>
            ARG <this>: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.<get-genericFlowNative>> declared in <root>.<get-genericFlowNative>' type=<root>.MyGenericClass1<T of <root>.<get-genericFlowNative>> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-genericFlowNative> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericFlowNative>>): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericFlowNative>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericFlow>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: T of <root>.<get-genericFlow>
            ARG <this>: GET_VAR 'val tmp_13: kotlinx.coroutines.flow.Flow<T of <root>.<get-genericFlow>> declared in <root>.<get-genericFlowNative>' type=kotlinx.coroutines.flow.Flow<T of <root>.<get-genericFlow>> origin=null
            ARG scope: GET_VAR 'val tmp_12: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-genericFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericSharedFlowNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "genericSharedFlow", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericSharedFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericSharedFlowNative>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      TYPE_PARAMETER GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.<get-genericSharedFlowNative>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericSharedFlowNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_14 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_15 type:kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>> [val]
          CALL 'public final fun <get-genericSharedFlow> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericSharedFlow>>): kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>> declared in <root>' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>> origin=null
            TYPE_ARG T: T of <root>.<get-genericSharedFlowNative>
            ARG <this>: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.<get-genericSharedFlowNative>> declared in <root>.<get-genericSharedFlowNative>' type=<root>.MyGenericClass1<T of <root>.<get-genericSharedFlowNative>> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-genericSharedFlowNative> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericSharedFlowNative>>): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericSharedFlowNative>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericSharedFlow>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: T of <root>.<get-genericSharedFlow>
            ARG <this>: GET_VAR 'val tmp_15: kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>> declared in <root>.<get-genericSharedFlowNative>' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>> origin=null
            ARG scope: GET_VAR 'val tmp_14: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-genericSharedFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericSharedFlowReplayCache visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericSharedFlowReplayCache> visibility:public modality:FINAL returnType:kotlin.collections.List<T of <root>.<get-genericSharedFlowReplayCache>>
      TYPE_PARAMETER GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.<get-genericSharedFlowReplayCache>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericSharedFlowReplayCache visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_16 type:kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>> [val]
          CALL 'public final fun <get-genericSharedFlow> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericSharedFlow>>): kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>> declared in <root>' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>> origin=null
            TYPE_ARG T: T of <root>.<get-genericSharedFlowReplayCache>
            ARG <this>: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.<get-genericSharedFlowReplayCache>> declared in <root>.<get-genericSharedFlowReplayCache>' type=<root>.MyGenericClass1<T of <root>.<get-genericSharedFlowReplayCache>> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-genericSharedFlowReplayCache> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericSharedFlowReplayCache>>): kotlin.collections.List<T of <root>.<get-genericSharedFlowReplayCache>> declared in <root>'
          CALL 'public abstract fun <get-replayCache> (): kotlin.collections.List<T of kotlinx.coroutines.flow.SharedFlow> declared in kotlinx.coroutines.flow.SharedFlow' type=T of <root>.<get-genericSharedFlow> origin=null
            ARG <this>: GET_VAR 'val tmp_16: kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>> declared in <root>.<get-genericSharedFlowReplayCache>' type=kotlinx.coroutines.flow.SharedFlow<T of <root>.<get-genericSharedFlow>> origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericStateFlowNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "genericStateFlow", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericStateFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericStateFlowNative>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      TYPE_PARAMETER GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.<get-genericStateFlowNative>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericStateFlowNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_17 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_18 type:kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>> [val]
          CALL 'public final fun <get-genericStateFlow> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericStateFlow>>): kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>> declared in <root>' type=kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>> origin=null
            TYPE_ARG T: T of <root>.<get-genericStateFlowNative>
            ARG <this>: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.<get-genericStateFlowNative>> declared in <root>.<get-genericStateFlowNative>' type=<root>.MyGenericClass1<T of <root>.<get-genericStateFlowNative>> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-genericStateFlowNative> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericStateFlowNative>>): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericStateFlowNative>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of <root>.<get-genericStateFlow>, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: T of <root>.<get-genericStateFlow>
            ARG <this>: GET_VAR 'val tmp_18: kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>> declared in <root>.<get-genericStateFlowNative>' type=kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>> origin=null
            ARG scope: GET_VAR 'val tmp_17: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-genericStateFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericStateFlowValue visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-genericStateFlowValue> visibility:public modality:FINAL returnType:T of <root>.<get-genericStateFlowValue>
      TYPE_PARAMETER GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:<root>.MyGenericClass1<T of <root>.<get-genericStateFlowValue>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:genericStateFlowValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_19 type:kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>> [val]
          CALL 'public final fun <get-genericStateFlow> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericStateFlow>>): kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>> declared in <root>' type=kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>> origin=null
            TYPE_ARG T: T of <root>.<get-genericStateFlowValue>
            ARG <this>: GET_VAR '<this>: <root>.MyGenericClass1<T of <root>.<get-genericStateFlowValue>> declared in <root>.<get-genericStateFlowValue>' type=<root>.MyGenericClass1<T of <root>.<get-genericStateFlowValue>> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-genericStateFlowValue> <T> (<this>: <root>.MyGenericClass1<T of <root>.<get-genericStateFlowValue>>): T of <root>.<get-genericStateFlowValue> declared in <root>'
          CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=T of <root>.<get-genericStateFlow> origin=null
            ARG <this>: GET_VAR 'val tmp_19: kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>> declared in <root>.<get-genericStateFlowValue>' type=kotlinx.coroutines.flow.StateFlow<T of <root>.<get-genericStateFlow>> origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:mutableNullableStatePropertyFlow visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-mutableNullableStatePropertyFlow> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:mutableNullableStatePropertyFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_20 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_21 type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? [val]
          CALL 'public final fun <get-mutableNullableStateProperty> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? declared in <root>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-mutableNullableStatePropertyFlow> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>'
          WHEN type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                ARG arg0: GET_VAR 'val tmp_21: kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? declared in <root>.<get-mutableNullableStatePropertyFlow>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? origin=null
                ARG arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
                TYPE_ARG T: kotlin.String
                ARG <this>: GET_VAR 'val tmp_21: kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? declared in <root>.<get-mutableNullableStatePropertyFlow>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? origin=null
                ARG scope: GET_VAR 'val tmp_20: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-mutableNullableStatePropertyFlow>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:mutableNullableStatePropertyValue visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "mutableNullableStateProperty", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-mutableNullableStatePropertyValue> visibility:public modality:FINAL returnType:kotlin.String?
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:mutableNullableStatePropertyValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_22 type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? [val]
          CALL 'public final fun <get-mutableNullableStateProperty> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? declared in <root>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-mutableNullableStatePropertyValue> (): kotlin.String? declared in <root>'
          WHEN type=kotlin.String? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                ARG arg0: GET_VAR 'val tmp_22: kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? declared in <root>.<get-mutableNullableStatePropertyValue>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? origin=null
                ARG arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.String? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=kotlin.String origin=null
                ARG <this>: GET_VAR 'val tmp_22: kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? declared in <root>.<get-mutableNullableStatePropertyValue>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String>? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:mutableStatePropertyFlow visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-mutableStatePropertyFlow> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:mutableStatePropertyFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_23 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_24 type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> [val]
          CALL 'public final fun <get-mutableStateProperty> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-mutableStatePropertyFlow> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String
            ARG <this>: GET_VAR 'val tmp_24: kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>.<get-mutableStatePropertyFlow>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
            ARG scope: GET_VAR 'val tmp_23: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-mutableStatePropertyFlow>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableFlowAndValueNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "nullableFlowAndValue", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableFlowAndValueNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableFlowAndValueNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_25 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_26 type:kotlinx.coroutines.flow.Flow<kotlin.String?>? [val]
          CALL 'public final fun <get-nullableFlowAndValue> (): kotlinx.coroutines.flow.Flow<kotlin.String?>? declared in <root>' type=kotlinx.coroutines.flow.Flow<kotlin.String?>? origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableFlowAndValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>'
          WHEN type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                ARG arg0: GET_VAR 'val tmp_26: kotlinx.coroutines.flow.Flow<kotlin.String?>? declared in <root>.<get-nullableFlowAndValueNative>' type=kotlinx.coroutines.flow.Flow<kotlin.String?>? origin=null
                ARG arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
                TYPE_ARG T: kotlin.String?
                ARG <this>: GET_VAR 'val tmp_26: kotlinx.coroutines.flow.Flow<kotlin.String?>? declared in <root>.<get-nullableFlowAndValueNative>' type=kotlinx.coroutines.flow.Flow<kotlin.String?>? origin=null
                ARG scope: GET_VAR 'val tmp_25: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-nullableFlowAndValueNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableFlowNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "nullableFlow", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableFlowNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_27 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_28 type:kotlinx.coroutines.flow.Flow<kotlin.String>? [val]
          CALL 'public final fun <get-nullableFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String>? declared in <root>' type=kotlinx.coroutines.flow.Flow<kotlin.String>? origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>'
          WHEN type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                ARG arg0: GET_VAR 'val tmp_28: kotlinx.coroutines.flow.Flow<kotlin.String>? declared in <root>.<get-nullableFlowNative>' type=kotlinx.coroutines.flow.Flow<kotlin.String>? origin=null
                ARG arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
                TYPE_ARG T: kotlin.String
                ARG <this>: GET_VAR 'val tmp_28: kotlinx.coroutines.flow.Flow<kotlin.String>? declared in <root>.<get-nullableFlowNative>' type=kotlinx.coroutines.flow.Flow<kotlin.String>? origin=null
                ARG scope: GET_VAR 'val tmp_27: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-nullableFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableFlowValueNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "nullableFlowValue", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableFlowValueNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableFlowValueNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_29 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_30 type:kotlinx.coroutines.flow.Flow<kotlin.String?> [val]
          CALL 'public final fun <get-nullableFlowValue> (): kotlinx.coroutines.flow.Flow<kotlin.String?> declared in <root>' type=kotlinx.coroutines.flow.Flow<kotlin.String?> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String?
            ARG <this>: GET_VAR 'val tmp_30: kotlinx.coroutines.flow.Flow<kotlin.String?> declared in <root>.<get-nullableFlowValueNative>' type=kotlinx.coroutines.flow.Flow<kotlin.String?> origin=null
            ARG scope: GET_VAR 'val tmp_29: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-nullableFlowValueNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableSharedFlowAndValueNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "nullableSharedFlowAndValue", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableSharedFlowAndValueNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableSharedFlowAndValueNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_31 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_32 type:kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? [val]
          CALL 'public final fun <get-nullableSharedFlowAndValue> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? declared in <root>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableSharedFlowAndValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>'
          WHEN type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                ARG arg0: GET_VAR 'val tmp_32: kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? declared in <root>.<get-nullableSharedFlowAndValueNative>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? origin=null
                ARG arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
                TYPE_ARG T: kotlin.String?
                ARG <this>: GET_VAR 'val tmp_32: kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? declared in <root>.<get-nullableSharedFlowAndValueNative>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? origin=null
                ARG scope: GET_VAR 'val tmp_31: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-nullableSharedFlowAndValueNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableSharedFlowAndValueReplayCache visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableSharedFlowAndValueReplayCache> visibility:public modality:FINAL returnType:kotlin.collections.List<kotlin.String?>?
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableSharedFlowAndValueReplayCache visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_33 type:kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? [val]
          CALL 'public final fun <get-nullableSharedFlowAndValue> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? declared in <root>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableSharedFlowAndValueReplayCache> (): kotlin.collections.List<kotlin.String?>? declared in <root>'
          WHEN type=kotlin.collections.List<kotlin.String?>? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                ARG arg0: GET_VAR 'val tmp_33: kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? declared in <root>.<get-nullableSharedFlowAndValueReplayCache>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? origin=null
                ARG arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.collections.List<kotlin.String?>? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public abstract fun <get-replayCache> (): kotlin.collections.List<T of kotlinx.coroutines.flow.SharedFlow> declared in kotlinx.coroutines.flow.SharedFlow' type=kotlin.String? origin=null
                ARG <this>: GET_VAR 'val tmp_33: kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? declared in <root>.<get-nullableSharedFlowAndValueReplayCache>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String?>? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableSharedFlowNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "nullableSharedFlow", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableSharedFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableSharedFlowNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_34 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_35 type:kotlinx.coroutines.flow.SharedFlow<kotlin.String>? [val]
          CALL 'public final fun <get-nullableSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String>? declared in <root>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String>? origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableSharedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>'
          WHEN type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                ARG arg0: GET_VAR 'val tmp_35: kotlinx.coroutines.flow.SharedFlow<kotlin.String>? declared in <root>.<get-nullableSharedFlowNative>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String>? origin=null
                ARG arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
                TYPE_ARG T: kotlin.String
                ARG <this>: GET_VAR 'val tmp_35: kotlinx.coroutines.flow.SharedFlow<kotlin.String>? declared in <root>.<get-nullableSharedFlowNative>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String>? origin=null
                ARG scope: GET_VAR 'val tmp_34: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-nullableSharedFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableSharedFlowReplayCache visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableSharedFlowReplayCache> visibility:public modality:FINAL returnType:kotlin.collections.List<kotlin.String>?
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableSharedFlowReplayCache visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_36 type:kotlinx.coroutines.flow.SharedFlow<kotlin.String>? [val]
          CALL 'public final fun <get-nullableSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String>? declared in <root>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String>? origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableSharedFlowReplayCache> (): kotlin.collections.List<kotlin.String>? declared in <root>'
          WHEN type=kotlin.collections.List<kotlin.String>? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                ARG arg0: GET_VAR 'val tmp_36: kotlinx.coroutines.flow.SharedFlow<kotlin.String>? declared in <root>.<get-nullableSharedFlowReplayCache>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String>? origin=null
                ARG arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.collections.List<kotlin.String>? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public abstract fun <get-replayCache> (): kotlin.collections.List<T of kotlinx.coroutines.flow.SharedFlow> declared in kotlinx.coroutines.flow.SharedFlow' type=kotlin.String origin=null
                ARG <this>: GET_VAR 'val tmp_36: kotlinx.coroutines.flow.SharedFlow<kotlin.String>? declared in <root>.<get-nullableSharedFlowReplayCache>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String>? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableSharedFlowValueNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "nullableSharedFlowValue", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableSharedFlowValueNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableSharedFlowValueNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_37 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_38 type:kotlinx.coroutines.flow.SharedFlow<kotlin.String?> [val]
          CALL 'public final fun <get-nullableSharedFlowValue> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String?> declared in <root>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String?> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableSharedFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String?
            ARG <this>: GET_VAR 'val tmp_38: kotlinx.coroutines.flow.SharedFlow<kotlin.String?> declared in <root>.<get-nullableSharedFlowValueNative>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String?> origin=null
            ARG scope: GET_VAR 'val tmp_37: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-nullableSharedFlowValueNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableSharedFlowValueReplayCache visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableSharedFlowValueReplayCache> visibility:public modality:FINAL returnType:kotlin.collections.List<kotlin.String?>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableSharedFlowValueReplayCache visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_39 type:kotlinx.coroutines.flow.SharedFlow<kotlin.String?> [val]
          CALL 'public final fun <get-nullableSharedFlowValue> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String?> declared in <root>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String?> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableSharedFlowValueReplayCache> (): kotlin.collections.List<kotlin.String?> declared in <root>'
          CALL 'public abstract fun <get-replayCache> (): kotlin.collections.List<T of kotlinx.coroutines.flow.SharedFlow> declared in kotlinx.coroutines.flow.SharedFlow' type=kotlin.String? origin=null
            ARG <this>: GET_VAR 'val tmp_39: kotlinx.coroutines.flow.SharedFlow<kotlin.String?> declared in <root>.<get-nullableSharedFlowValueReplayCache>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String?> origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableStateFlowAndValueNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "nullableStateFlowAndValue", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableStateFlowAndValueNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableStateFlowAndValueNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_40 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_41 type:kotlinx.coroutines.flow.StateFlow<kotlin.String?>? [val]
          CALL 'public final fun <get-nullableStateFlowAndValue> (): kotlinx.coroutines.flow.StateFlow<kotlin.String?>? declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String?>? origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableStateFlowAndValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>'
          WHEN type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                ARG arg0: GET_VAR 'val tmp_41: kotlinx.coroutines.flow.StateFlow<kotlin.String?>? declared in <root>.<get-nullableStateFlowAndValueNative>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String?>? origin=null
                ARG arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
                TYPE_ARG T: kotlin.String?
                ARG <this>: GET_VAR 'val tmp_41: kotlinx.coroutines.flow.StateFlow<kotlin.String?>? declared in <root>.<get-nullableStateFlowAndValueNative>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String?>? origin=null
                ARG scope: GET_VAR 'val tmp_40: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-nullableStateFlowAndValueNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableStateFlowAndValueValue visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableStateFlowAndValueValue> visibility:public modality:FINAL returnType:kotlin.String?
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableStateFlowAndValueValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_42 type:kotlinx.coroutines.flow.StateFlow<kotlin.String?>? [val]
          CALL 'public final fun <get-nullableStateFlowAndValue> (): kotlinx.coroutines.flow.StateFlow<kotlin.String?>? declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String?>? origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableStateFlowAndValueValue> (): kotlin.String? declared in <root>'
          WHEN type=kotlin.String? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                ARG arg0: GET_VAR 'val tmp_42: kotlinx.coroutines.flow.StateFlow<kotlin.String?>? declared in <root>.<get-nullableStateFlowAndValueValue>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String?>? origin=null
                ARG arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.String? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=kotlin.String? origin=null
                ARG <this>: GET_VAR 'val tmp_42: kotlinx.coroutines.flow.StateFlow<kotlin.String?>? declared in <root>.<get-nullableStateFlowAndValueValue>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String?>? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableStateFlowPropertyNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "nullableStateFlowProperty", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableStateFlowPropertyNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>?
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableStateFlowPropertyNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_43 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_44 type:kotlinx.coroutines.flow.StateFlow<kotlin.String>? [val]
          CALL 'public final fun <get-nullableStateFlowProperty> (): kotlinx.coroutines.flow.StateFlow<kotlin.String>? declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String>? origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableStateFlowPropertyNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? declared in <root>'
          WHEN type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                ARG arg0: GET_VAR 'val tmp_44: kotlinx.coroutines.flow.StateFlow<kotlin.String>? declared in <root>.<get-nullableStateFlowPropertyNative>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String>? origin=null
                ARG arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
                TYPE_ARG T: kotlin.String
                ARG <this>: GET_VAR 'val tmp_44: kotlinx.coroutines.flow.StateFlow<kotlin.String>? declared in <root>.<get-nullableStateFlowPropertyNative>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String>? origin=null
                ARG scope: GET_VAR 'val tmp_43: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-nullableStateFlowPropertyNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableStateFlowPropertyValue visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableStateFlowPropertyValue> visibility:public modality:FINAL returnType:kotlin.String?
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableStateFlowPropertyValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_45 type:kotlinx.coroutines.flow.StateFlow<kotlin.String>? [val]
          CALL 'public final fun <get-nullableStateFlowProperty> (): kotlinx.coroutines.flow.StateFlow<kotlin.String>? declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String>? origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableStateFlowPropertyValue> (): kotlin.String? declared in <root>'
          WHEN type=kotlin.String? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                ARG arg0: GET_VAR 'val tmp_45: kotlinx.coroutines.flow.StateFlow<kotlin.String>? declared in <root>.<get-nullableStateFlowPropertyValue>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String>? origin=null
                ARG arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.String? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=kotlin.String origin=null
                ARG <this>: GET_VAR 'val tmp_45: kotlinx.coroutines.flow.StateFlow<kotlin.String>? declared in <root>.<get-nullableStateFlowPropertyValue>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String>? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableStateFlowValueNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "nullableStateFlowValue", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableStateFlowValueNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableStateFlowValueNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_46 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_47 type:kotlinx.coroutines.flow.StateFlow<kotlin.String?> [val]
          CALL 'public final fun <get-nullableStateFlowValue> (): kotlinx.coroutines.flow.StateFlow<kotlin.String?> declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String?> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableStateFlowValueNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String?, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String?
            ARG <this>: GET_VAR 'val tmp_47: kotlinx.coroutines.flow.StateFlow<kotlin.String?> declared in <root>.<get-nullableStateFlowValueNative>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String?> origin=null
            ARG scope: GET_VAR 'val tmp_46: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-nullableStateFlowValueNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableStateFlowValueValue visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-nullableStateFlowValueValue> visibility:public modality:FINAL returnType:kotlin.String?
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:nullableStateFlowValueValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_48 type:kotlinx.coroutines.flow.StateFlow<kotlin.String?> [val]
          CALL 'public final fun <get-nullableStateFlowValue> (): kotlinx.coroutines.flow.StateFlow<kotlin.String?> declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String?> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-nullableStateFlowValueValue> (): kotlin.String? declared in <root>'
          CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=kotlin.String? origin=null
            ARG <this>: GET_VAR 'val tmp_48: kotlinx.coroutines.flow.StateFlow<kotlin.String?> declared in <root>.<get-nullableStateFlowValueValue>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String?> origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:refinedFlowNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "refinedFlow", swiftName = <null>, exact = <null>)
      ShouldRefineInSwift
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-refinedFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:refinedFlowNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_49 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_50 type:kotlinx.coroutines.flow.Flow<kotlin.String> [val]
          CALL 'public final fun <get-refinedFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-refinedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String
            ARG <this>: GET_VAR 'val tmp_50: kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.<get-refinedFlowNative>' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
            ARG scope: GET_VAR 'val tmp_49: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-refinedFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:refinedStateFlow visibility:public modality:FINAL [val]
    annotations:
      ShouldRefineInSwift
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-refinedStateFlow> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:refinedStateFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_51 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_52 type:kotlinx.coroutines.flow.StateFlow<kotlin.String> [val]
          CALL 'public final fun <get-refinedState> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-refinedStateFlow> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String
            ARG <this>: GET_VAR 'val tmp_52: kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.<get-refinedStateFlow>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
            ARG scope: GET_VAR 'val tmp_51: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-refinedStateFlow>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:refinedStateValue visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "refinedState", swiftName = <null>, exact = <null>)
      ShouldRefineInSwift
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-refinedStateValue> visibility:public modality:FINAL returnType:kotlin.String
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:refinedStateValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_53 type:kotlinx.coroutines.flow.StateFlow<kotlin.String> [val]
          CALL 'public final fun <get-refinedState> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-refinedStateValue> (): kotlin.String declared in <root>'
          CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=kotlin.String origin=null
            ARG <this>: GET_VAR 'val tmp_53: kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.<get-refinedStateValue>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:statePropertyFlow visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-statePropertyFlow> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:statePropertyFlow visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_54 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_55 type:kotlinx.coroutines.flow.StateFlow<kotlin.String> [val]
          CALL 'public final fun <get-stateProperty> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-statePropertyFlow> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String
            ARG <this>: GET_VAR 'val tmp_55: kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.<get-statePropertyFlow>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
            ARG scope: GET_VAR 'val tmp_54: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-statePropertyFlow>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:statePropertyValue visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "stateProperty", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-statePropertyValue> visibility:public modality:FINAL returnType:kotlin.String
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:statePropertyValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_56 type:kotlinx.coroutines.flow.StateFlow<kotlin.String> [val]
          CALL 'public final fun <get-stateProperty> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-statePropertyValue> (): kotlin.String declared in <root>'
          CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=kotlin.String origin=null
            ARG <this>: GET_VAR 'val tmp_56: kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.<get-statePropertyValue>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelFlowNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "topLevelFlow", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-topLevelFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelFlowNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_57 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_58 type:kotlinx.coroutines.flow.Flow<kotlin.String> [val]
          CALL 'public final fun <get-topLevelFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String
            ARG <this>: GET_VAR 'val tmp_58: kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.<get-topLevelFlowNative>' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
            ARG scope: GET_VAR 'val tmp_57: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-topLevelFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelMutableStateFlowNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "topLevelMutableStateFlow", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-topLevelMutableStateFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelMutableStateFlowNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_59 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_60 type:kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> [val]
          CALL 'public final fun <get-topLevelMutableStateFlow> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelMutableStateFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String
            ARG <this>: GET_VAR 'val tmp_60: kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in <root>.<get-topLevelMutableStateFlowNative>' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=null
            ARG scope: GET_VAR 'val tmp_59: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-topLevelMutableStateFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelSharedFlowNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "topLevelSharedFlow", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-topLevelSharedFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelSharedFlowNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_61 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_62 type:kotlinx.coroutines.flow.SharedFlow<kotlin.String> [val]
          CALL 'public final fun <get-topLevelSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelSharedFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String
            ARG <this>: GET_VAR 'val tmp_62: kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>.<get-topLevelSharedFlowNative>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=null
            ARG scope: GET_VAR 'val tmp_61: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-topLevelSharedFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelSharedFlowReplayCache visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-topLevelSharedFlowReplayCache> visibility:public modality:FINAL returnType:kotlin.collections.List<kotlin.String>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelSharedFlowReplayCache visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_63 type:kotlinx.coroutines.flow.SharedFlow<kotlin.String> [val]
          CALL 'public final fun <get-topLevelSharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelSharedFlowReplayCache> (): kotlin.collections.List<kotlin.String> declared in <root>'
          CALL 'public abstract fun <get-replayCache> (): kotlin.collections.List<T of kotlinx.coroutines.flow.SharedFlow> declared in kotlinx.coroutines.flow.SharedFlow' type=kotlin.String origin=null
            ARG <this>: GET_VAR 'val tmp_63: kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>.<get-topLevelSharedFlowReplayCache>' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelStateFlowNative visibility:public modality:FINAL [val]
    annotations:
      ObjCName(name = "topLevelStateFlow", swiftName = <null>, exact = <null>)
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-topLevelStateFlowNative> visibility:public modality:FINAL returnType:kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>>
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelStateFlowNative visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_64 type:kotlinx.coroutines.CoroutineScope? [val]
          CONST Null type=kotlinx.coroutines.CoroutineScope? value=null
        VAR IR_TEMPORARY_VARIABLE name:tmp_65 type:kotlinx.coroutines.flow.StateFlow<kotlin.String> [val]
          CALL 'public final fun <get-topLevelStateFlow> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelStateFlowNative> (): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in <root>'
          CALL 'public final fun asNativeFlow <T> (<this>: kotlinx.coroutines.flow.Flow<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow>, scope: kotlinx.coroutines.CoroutineScope?): kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<T of com.rickclephas.kmp.nativecoroutines.asNativeFlow, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> declared in com.rickclephas.kmp.nativecoroutines' type=kotlin.Function3<@[ParameterName(name = "onItem")] kotlin.Function3<kotlin.String, kotlin.Function0<kotlin.Unit>, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onComplete")] kotlin.Function2<kotlin.Throwable?, kotlin.Unit, kotlin.Unit>, @[ParameterName(name = "onCancelled")] kotlin.Function2<kotlin.Throwable, kotlin.Unit, kotlin.Unit>, kotlin.Function0<kotlin.Unit>> origin=null
            TYPE_ARG T: kotlin.String
            ARG <this>: GET_VAR 'val tmp_65: kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.<get-topLevelStateFlowNative>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
            ARG scope: GET_VAR 'val tmp_64: kotlinx.coroutines.CoroutineScope? declared in <root>.<get-topLevelStateFlowNative>' type=kotlinx.coroutines.CoroutineScope? origin=null
  PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelStateFlowValue visibility:public modality:FINAL [val]
    FUN GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:<get-topLevelStateFlowValue> visibility:public modality:FINAL returnType:kotlin.String
      correspondingProperty: PROPERTY GENERATED[com.rickclephas.kmp.nativecoroutines.compiler.fir.utils.NativeCoroutinesDeclarationKey] name:topLevelStateFlowValue visibility:public modality:FINAL [val]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp_66 type:kotlinx.coroutines.flow.StateFlow<kotlin.String> [val]
          CALL 'public final fun <get-topLevelStateFlow> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
        RETURN type=kotlin.Nothing from='public final fun <get-topLevelStateFlowValue> (): kotlin.String declared in <root>'
          CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=kotlin.String origin=null
            ARG <this>: GET_VAR 'val tmp_66: kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.<get-topLevelStateFlowValue>' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
